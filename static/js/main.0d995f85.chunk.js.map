{"version":3,"sources":["store/appList/reducers.ts","store/configuration/reducers.ts","store/savedApps/reducers.ts","store/index.ts","store/appList/types.ts","store/configuration/types.ts","store/savedApps/types.ts","actions/authentication.ts","store/configuration/actions.ts","actions/getAppDetails.ts","actions/searchApps.ts","store/appList/actions.ts","store/appList/filter.ts","components/DropdownFilter/DropdownFilter.tsx","components/AppItem.tsx","store/savedApps/actions.ts","components/AppModal/AppItemModal.tsx","components/WatchFaceList.tsx","components/AppListView.tsx","components/AppsList.tsx","components/SavedAppsList/SavedAppsList.tsx","components/SearchAppsList/SearchAppsList.tsx","components/About/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","appsList","apps","doesMoreItemsExist","nextPageId","isNextRequestOngoing","watchFacesList","lastSearchResult","authToken","accessToken","expiresAt","galleryApiUrl","savedApps","rootReducer","combineReducers","appList","state","action","type","fullAppsList","payload","filteredAppsList","tempMap","Map","item","has","id","set","push","watchFaces","config","savedApp","filter","app","middleware","reduxThunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","getRequestWrappedCorsEverywhere","url","a","fetch","res","json","isResponseValid","auth","apiConfig","Date","now","getAuthTokenFromLocalCache","str","localStorage","getItem","JSON","parse","updateAuthTokenToLocalCache","setItem","stringify","getAuthTokenFromJsonStorage","response","updateAuthTokenToJsonStorage","method","body","getAuthTokenFromFitbit","getAuthToken","localCache","jsonResponse","fitbitResponse","catch","err","console","error","fetchConfigurationData","getAuthTokenAndEndpoint","AppDetails","apiUrl","appId","getAppDetails","gql","bdy","operationName","variables","query","headers","Authorization","result","CategoryType","SearchApps","searchText","querySearch","text","fetchAppHead","dispatch","getState","fetchAppDetails","asyncResp","name","data","developerName","developer","previewImage","uri","icon","isPaid","deviceTypes","availability","map","v","fetchAppsList","categoryType","nextPageKey","pageKey","getAppListGql","resultObj","DeviceType","AppType","searchAppHeaders","searchApps","appResults","watchfaces","clockResults","filterAppList","fullList","validAgainstFilter","undefined","appType","deviceType","findIndex","compareAgainstFilter","Dropdown","props","selectedItem","items","isActive","this","setState","onSelectionChanged","className","onClick","aria-haspopup","aria-controls","prefixText","displayName","faAngleDown","role","href","onItemSelect","Component","AppItem","src","alt","faCreditCard","size","saveSavedApps","savedAppsState","AppItemModal","appsDetails","serializedData","loadSavedApps","prevProps","isSaved","currentDetails","document","getElementsByTagName","style","overflow","overflowY","retrieveAppDetails","currentAppDetails","onClose","mouseDragEnabled","autoPlay","autoPlayInterval","buttonsDisabled","autoHeight","screenshots","screenshot","removeCurrentAppFromSaved","bind","saveCurrentApp","fasHeart","farHeart","device","productName","target","display","description","split","i","key","aria-label","found","find","details","configs","connect","PriceFilterEnum","ownProps","AppListView","loadingRowsPromises","filteredAppList","allApps","onScroll","event","element","scrollingElement","scrollHeight","scrollTop","clientHeight","fetchMoreApps","length","addEventListener","removeEventListener","prevState","Promise","all","fetching","splice","modalAppIdShow","loadMoreItems","DeviceFilterEnum","priceFilterDisplay","PaidFree","value","Free","Paid","deviceFilterDisplay","All","Versa","Versa_Lite","Versa2","Ionic","WatchFaceList","currentFilter","fetchWatchFaceListNextPage","watchFaceList","log","allWatchFaces","collection","pagedApps","nextPages","AppsList","fetchWatchFacesListNextPage","TypeFilterEnum","typeFilterDisplay","WatchFaces","WatchFace","Apps","App","SavedAppsList","currentlyDownloadingItems","filteredSavedApps","itemId","x","savedAppsList","savedWatchFacesList","foundList","notFoundList","forEach","downloadMissingItem","faGithub","searchInputValue","searchForApps","evt","onChange","updateInputValue","onKeyUp","e","keyCode","searchAppsList","executeSearch","placeholder","selectedTabClassName","SearchAppsList","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d995f85.chunk.js","sourcesContent":["import {\n    AppListActionTypes,\n    AppHeadsListState,\n    FETCH_APPHEADLIST_NEXT_PAGE,\n    FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n    AppHead,\n    SEARCH_APPS_AND_WATCHFACES,\n} from './types';\n\nconst initialState: AppHeadsListState = {\n    appsList: {\n        apps: [],\n        doesMoreItemsExist: true,\n        nextPageId: '',\n        isNextRequestOngoing: false,\n    },\n    watchFacesList: {\n        apps: [],\n        doesMoreItemsExist: true,\n        nextPageId: '',\n        isNextRequestOngoing: false,\n    },\n    lastSearchResult: {\n        apps: [],\n        doesMoreItemsExist: false,\n        isNextRequestOngoing: false,\n        nextPageId: '',\n    },\n};\n\nexport function appListReducer(\n    state = initialState,\n    action: AppListActionTypes,\n): AppHeadsListState {\n    switch (action.type) {\n        case FETCH_APPHEADLIST_NEXT_PAGE: {\n            const fullAppsList = [\n                ...state.appsList.apps,\n                ...action.payload.apps,\n            ];\n            const filteredAppsList: AppHead[] = [];\n            const tempMap = new Map<string, boolean>();\n            for (const item of fullAppsList) {\n                if (!tempMap.has(item.id)) {\n                    tempMap.set(item.id, true);\n                    filteredAppsList.push(item);\n                }\n            }\n            return {\n                appsList: {\n                    apps: filteredAppsList,\n                    doesMoreItemsExist: action.payload.doesMoreItemsExist,\n                    nextPageId: action.payload.nextPageId,\n                    isNextRequestOngoing: action.payload.isNextRequestOngoing,\n                },\n                watchFacesList: state.watchFacesList,\n                lastSearchResult: state.lastSearchResult,\n            };\n        }\n\n        case FETCH_WATCHFACEHEADLIST_NEXT_PAGE: {\n            const fullAppsList = [\n                ...state.watchFacesList.apps,\n                ...action.payload.watchFaces,\n            ];\n            const filteredAppsList: AppHead[] = [];\n            const tempMap = new Map<string, boolean>();\n            for (const item of fullAppsList) {\n                if (!tempMap.has(item.id)) {\n                    tempMap.set(item.id, true);\n                    filteredAppsList.push(item);\n                }\n            }\n            return {\n                watchFacesList: {\n                    apps: filteredAppsList,\n                    doesMoreItemsExist: action.payload.doesMoreItemsExist,\n                    nextPageId: action.payload.nextPageId,\n                    isNextRequestOngoing: action.payload.isNextRequestOngoing,\n                },\n                appsList: state.appsList,\n                lastSearchResult: state.lastSearchResult,\n            };\n        }\n\n        case SEARCH_APPS_AND_WATCHFACES: {\n            return {\n                appsList: state.appsList,\n                watchFacesList: state.watchFacesList,\n                lastSearchResult: {\n                    apps: [...action.payload.watchFaces],\n                    doesMoreItemsExist: false,\n                    nextPageId: '',\n                    isNextRequestOngoing: action.payload.isNextRequestOngoing,\n                },\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n","import {\n    ConfigurationState,\n    ConfigurationActionTypes,\n    FETCH_CONFIGURATION_DATA,\n} from './types';\n\nconst initialState: ConfigurationState = {\n    authToken: {\n        accessToken: '',\n        expiresAt: 0,\n    },\n    galleryApiUrl: '',\n};\n\nexport function configurationReducer(\n    state = initialState,\n    action: ConfigurationActionTypes,\n): ConfigurationState {\n    switch (action.type) {\n        case FETCH_CONFIGURATION_DATA:\n            // Just replace the whole state object with new data.\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import {\n    SavedAppsState,\n    SavedAppActionTypes,\n    SAVE_APP,\n    REMOVE_SAVED_APP,\n    LOAD_SAVED_APPS,\n    SAVE_SAVED_APPS,\n} from './types';\n\nconst initialState: SavedAppsState = {\n    savedApps: [],\n};\n\nexport function savedAppsReducer(\n    state = initialState,\n    action: SavedAppActionTypes,\n): SavedAppsState {\n    switch (action.type) {\n        case SAVE_APP:\n            return {\n                ...state,\n                savedApps: [...state.savedApps, action.payload.savedApp],\n            };\n\n        case REMOVE_SAVED_APP:\n            return {\n                ...state,\n                savedApps: [\n                    ...state.savedApps.filter((app) => {\n                        return app.id !== action.payload.savedApp.id;\n                    }),\n                ],\n            };\n\n        case LOAD_SAVED_APPS:\n            return {\n                ...state,\n                savedApps: [...action.payload.savedApps],\n            };\n\n        case SAVE_SAVED_APPS:\n            // Don't update store here.\n            return state;\n\n        default:\n            return state;\n    }\n}\n","// import { systemReducer } from './system/reducers';\nimport { appListReducer } from './appList/reducers';\nimport { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { configurationReducer } from './configuration/reducers';\nimport { savedAppsReducer } from './savedApps/reducers';\n\nconst rootReducer = combineReducers({\n    appList: appListReducer,\n    config: configurationReducer,\n    savedApps: savedAppsReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst initialState = {};\n\nconst middleware = [reduxThunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n            : (f: any) => f,\n    ),\n);\n\nexport default store;\n","export interface AppHead {\n    name: string;\n    type: string;\n    developerName: string;\n    previewImage: string;\n    icon: string;\n    id: string;\n    isPaid: boolean;\n    deviceTypes: string[];\n}\n\nexport interface AppHeadsList {\n    apps: AppHead[];\n    doesMoreItemsExist: boolean;\n    nextPageId: string;\n    isNextRequestOngoing: boolean;\n}\n\nexport interface AppHeadsListState {\n    appsList: AppHeadsList;\n    watchFacesList: AppHeadsList;\n    lastSearchResult: AppHeadsList;\n}\n\nexport const FETCH_WATCHFACEHEADLIST_NEXT_PAGE =\n    'FETCH_WATCHFACEHEADLIST_NEXT_PAGE';\nexport const FETCH_APPHEADLIST_NEXT_PAGE = 'FETCH_APPHEADLIST_NEXT_PAGE';\nexport const SEARCH_APPS_AND_WATCHFACES = 'SEARCH_APPS_AND_WATCHFACES';\n\ninterface FetchAppHeadsListNextPage {\n    type: typeof FETCH_APPHEADLIST_NEXT_PAGE;\n    payload: {\n        apps: AppHead[];\n        isNextRequestOngoing: boolean;\n        doesMoreItemsExist: boolean;\n        nextPageId: string;\n    };\n}\n\ninterface FetchWatchFaceHeadsListNextPage {\n    type: typeof FETCH_WATCHFACEHEADLIST_NEXT_PAGE;\n    payload: {\n        watchFaces: AppHead[];\n        isNextRequestOngoing: boolean;\n        doesMoreItemsExist: boolean;\n        nextPageId: string;\n    };\n}\n\ninterface SearchAppsAndWatchfaces {\n    type: typeof SEARCH_APPS_AND_WATCHFACES;\n    payload: {\n        watchFaces: AppHead[];\n        isNextRequestOngoing: boolean;\n    };\n}\n\nexport type AppListActionTypes =\n    | FetchAppHeadsListNextPage\n    | FetchWatchFaceHeadsListNextPage\n    | SearchAppsAndWatchfaces;\n","import { FitbitConfigurationResponseApiConfig } from \"../../types/fitbitGalleryTypes\";\n\nexport interface AuthenticationToken {\n    accessToken: string;\n    expiresAt: number;\n}\n\nexport interface ConfigurationState {\n    galleryApiUrl: string;\n    authToken: AuthenticationToken;\n}\n\nexport const FETCH_CONFIGURATION_DATA = 'FETCH_CONFIGURATION_DATA';\n\ninterface FetchConfigurationData {\n    type: typeof FETCH_CONFIGURATION_DATA;\n    payload: FitbitConfigurationResponseApiConfig;\n}\n\nexport type ConfigurationActionTypes = FetchConfigurationData;\n","export interface SavedApp {\n    id: string;\n}\n\nexport interface SavedAppsState {\n    savedApps: SavedApp[];\n}\n\nexport const SAVE_APP = 'SAVE_APP';\nexport const REMOVE_SAVED_APP = 'REMOVE_SAVED_APP';\nexport const LOAD_SAVED_APPS = 'LOAD_SAVED_APPS';\nexport const SAVE_SAVED_APPS = 'SAVE_SAVED_APPS';\n\ninterface SaveApp {\n    type: typeof SAVE_APP;\n    payload: {\n        savedApp: SavedApp;\n    };\n}\n\ninterface RemoveSavedApp {\n    type: typeof REMOVE_SAVED_APP;\n    payload: {\n        savedApp: SavedApp;\n    };\n}\n\ninterface LoadSavedApps {\n    type: typeof LOAD_SAVED_APPS;\n    payload: {\n        savedApps: SavedApp[];\n    };\n}\n\ninterface SaveSavedApps {\n    type: typeof SAVE_SAVED_APPS;\n}\n\nexport type SavedAppActionTypes = SaveApp | RemoveSavedApp | LoadSavedApps | SaveSavedApps;\n","export interface FitbitAuthResponse {\n    apiConfig: APIConfig;\n}\n\nexport interface APIConfig {\n    galleryApiUrl: string;\n    authToken:     AuthToken;\n}\n\nexport interface AuthToken {\n    accessToken: string;\n    expiresAt:   number;\n}\n\n/**\n * Be careful to not make too many requests to this endpoint.\n * using public cors everywhere website for now. https://cors-anywhere.herokuapp.com/\n * @param url url to send request with cors ignored\n */\nasync function getRequestWrappedCorsEverywhere<T>(url: string): Promise<T> {\n    const res = await fetch(`https://cors-anywhere.herokuapp.com/${url}`);\n    // Let's hope T type was passed correctly\n    return await res.json() as T;\n}\n\n\nfunction isResponseValid(auth: FitbitAuthResponse): boolean {\n    if (\n        typeof auth?.apiConfig?.authToken?.accessToken !== 'string' ||\n        typeof auth?.apiConfig?.authToken?.expiresAt !== 'number' ||\n        typeof auth?.apiConfig.galleryApiUrl !== 'string' ||\n        // Expired?\n        auth.apiConfig.authToken.expiresAt < Date.now() / 1000\n    ) {\n        return false;\n    }\n    return true;\n}\n\nconst localStorageAuthCacheName = 'AuthCacheName';\n\n/**\n * Level 1 cache\n */\nfunction getAuthTokenFromLocalCache(): FitbitAuthResponse | undefined {\n    const str = localStorage.getItem(localStorageAuthCacheName);\n    if (!str)\n        return;\n    const auth = JSON.parse(str) as FitbitAuthResponse;\n    if (!isResponseValid(auth)) {\n        return;\n    }\n    return auth;\n}\n\nfunction updateAuthTokenToLocalCache(auth: FitbitAuthResponse): void {\n    localStorage.setItem(localStorageAuthCacheName, JSON.stringify(auth));\n}\n\n/**\n * Level 2 cache\n */\nasync function getAuthTokenFromJsonStorage(): Promise<FitbitAuthResponse | undefined> {\n    // Since this is such small app without backend, this will be good enough as a cache.\n    // Otherwise would have to host something proper.\n    try {\n        const response = await (await fetch('https://api.npoint.io/a0a34f7a0a2a6e6f5272')).json() as FitbitAuthResponse;\n        // Some validation, just in case.\n        if (!isResponseValid(response)) {\n            // Invalid saved json. Ignore it.\n            return;\n        }\n\n        return response;\n    } catch (error) {\n        // If for some reason it fails, ignore it.\n    }\n}\n\nasync function updateAuthTokenToJsonStorage(auth: FitbitAuthResponse): Promise<void> {\n    // Without backend there's no real way to ensure this session is the only one writing to storage at a time.\n    // It will be good enough for now.\n    await fetch('https://api.npoint.io/a0a34f7a0a2a6e6f5272', {\n        method: 'POST',\n        body: JSON.stringify(auth),\n    });\n}\n\n/**\n * Source of truth\n */\nasync function getAuthTokenFromFitbit(): Promise<FitbitAuthResponse> {\n    // Since fitbit doesn't allow requests to it's _internal endpoint from other pages and we don't have backend here.\n    // Workaround using corsEverywhere, This request is considered pricy and should be used as rarely as possible.\n    return await getRequestWrappedCorsEverywhere<FitbitAuthResponse>('https://gallery.fitbit.com/_internal/config');\n}\n\nexport async function getAuthToken(): Promise<FitbitAuthResponse> {\n    // Check JsonStorage endpoint for valid json\n    // If failed, fetch new from Fitbit\n    // Update json storage with new token\n    const localCache = getAuthTokenFromLocalCache();\n    if (localCache) {\n        return localCache;\n    }\n\n    const jsonResponse = await getAuthTokenFromJsonStorage();\n    if (jsonResponse) {\n        // This cache could be update by others.\n        updateAuthTokenToLocalCache(jsonResponse);\n        return jsonResponse;\n    }\n\n    // Let's hope this doesn't fail\n    const fitbitResponse = await getAuthTokenFromFitbit();\n\n    // Fitbit is our source of truth, update both caches.\n    updateAuthTokenToLocalCache(fitbitResponse);\n    // Fire and forget\n    updateAuthTokenToJsonStorage(fitbitResponse)\n        .catch((err: any) => console.error('When updating JSON storage error occurred', err));\n\n\n    return fitbitResponse;\n}","import { ConfigurationActionTypes, FETCH_CONFIGURATION_DATA } from './types';\nimport { FitbitConfigurationResponseRoot } from '../../types/fitbitGalleryTypes';\nimport { getAuthToken } from '../../actions/authentication';\n\nexport async function fetchConfigurationData(): Promise<\n    ConfigurationActionTypes\n> {\n    const config = await getAuthTokenAndEndpoint();\n    return {\n        type: FETCH_CONFIGURATION_DATA,\n        payload: config.apiConfig,\n    };\n}\n\n\nasync function getAuthTokenAndEndpoint(): Promise<FitbitConfigurationResponseRoot> {\n    return getAuthToken();\n}\n","import { FitbitGalleryAppDetailsResponseRoot } from '../types/fitbitGalleryTypes';\nimport gql from 'graphql-tag';\n\nexport class AppDetails {\n    public static async fetchAppDetails(\n        accessToken: string,\n        apiUrl: string,\n        appId: string,\n    ): Promise<FitbitGalleryAppDetailsResponseRoot> {\n        const getAppDetails = gql`\nquery app($id: ID!) {\n    app(id: $id) {\n        ...AppDetails\n    }\n}\n\nfragment AppDetails on App {\n    id\n    name\n    availability {\n        deviceTypes {\n            type\n            productName\n        }\n    }\n    previewImage(scale: 1.0) {\n        uri\n    }\n    icon(width: 120, height: 120) {\n        uri\n    }\n    developer {\n        name\n        website\n    }\n    description\n    contactUrl\n    screenshots {\n        uri\n        width\n        height\n    }\n    type\n    categories {\n        id\n        name\n    }\n    isPaid\n}\n`;\n        const bdy = {\n            operationName: 'app',\n            variables: {\n                id: appId,\n            },\n            query: getAppDetails,\n        };\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(bdy),\n        });\n        const result = await response.json() as FitbitGalleryAppDetailsResponseRoot;\n        return result;\n    }\n}\n","import { FitbitGallerySearchListResponseRoot } from '../types/fitbitGalleryTypes';\nimport gql from 'graphql-tag';\n\nexport class SearchApps {\n    public static async searchApps(\n        accessToken: string,\n        apiUrl: string,\n        searchText: string,\n    ): Promise<FitbitGallerySearchListResponseRoot> {\n        const querySearch = gql`\n            query searchApps($text: String!) {\n                appResults: searchApps(criteria: { type: APP, text: $text }) {\n                    ...pagedApps\n                }\n                clockResults: searchApps(\n                    criteria: { type: CLOCK, text: $text }\n                ) {\n                    ...pagedApps\n                }\n            }\n\n            fragment pagedApps on PagedApps {\n                apps {\n                    ...appSummary\n                }\n                nextPages\n                prevPages\n                offset\n            }\n\n            fragment appSummary on App {\n                id\n                availability {\n                    deviceTypes {\n                        type\n                        productName\n                    }\n                }\n                previewImage(scale: 1.0) {\n                    uri\n                }\n                icon(width: 120, height: 120) {\n                    uri\n                }\n                developer {\n                    name\n                }\n                name\n                type\n                isPaid\n            }\n        `;\n        const bdy = {\n            query: querySearch,\n            operationName: 'searchApps',\n            variables: { text: searchText },\n        };\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(bdy),\n        });\n        const result = (await response.json()) as FitbitGallerySearchListResponseRoot;\n        return result;\n    }\n}\n","import {\n    AppListActionTypes,\n    AppHead,\n    FETCH_APPHEADLIST_NEXT_PAGE,\n    FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n    SEARCH_APPS_AND_WATCHFACES,\n} from './types';\nimport { AppState } from '..';\nimport { ThunkAction } from 'redux-thunk';\nimport { fetchConfigurationData } from '../configuration/actions';\nimport gql from 'graphql-tag';\nimport { FitbitGalleryListResponseRoot } from '../../types/fitbitGalleryTypes';\nimport { ConfigurationActionTypes } from '../configuration/types';\nimport { AppDetails } from '../../actions/getAppDetails';\nimport { SearchApps } from '../../actions/searchApps';\n\nexport enum CategoryType {\n    allWatchFaces = 'c3c6d097-a255-4613-b817-d5d693f13318',\n    allApps = 'a406cc65-ebae-4e47-b1bd-7f86800bb2c6',\n}\n\nexport function fetchNextPageAppList(): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        dispatch({\n            type: FETCH_APPHEADLIST_NEXT_PAGE,\n            payload: {\n                isNextRequestOngoing: true,\n                doesMoreItemsExist: getState().appList.appsList\n                    .doesMoreItemsExist,\n                nextPageId: getState().appList.appsList.nextPageId,\n                apps: [],\n            },\n        });\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await fetchAppsList(\n            CategoryType.allApps,\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            getState().appList.appsList.nextPageId,\n        );\n        const appsList = asyncResp.data.collection.pagedApps.apps.map((a) => {\n            const app: AppHead = {\n                name: a.name,\n                type: a.type,\n                developerName: a.developer.name,\n                previewImage: a.previewImage.uri,\n                icon: a.icon.uri,\n                id: a.id,\n                isPaid: a.isPaid,\n                deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n            };\n            return app;\n        });\n\n        dispatch({\n            type: FETCH_APPHEADLIST_NEXT_PAGE,\n            payload: {\n                apps: appsList,\n                nextPageId: asyncResp.data.collection.pagedApps.nextPages[0],\n                doesMoreItemsExist: true,\n                isNextRequestOngoing: false,\n            },\n        });\n    };\n}\n\nexport function fetchAppHead(\n    appId: string,\n    type: 'APP' | 'WATCHFACE',\n): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        if (type === 'APP') {\n            dispatch({\n                type: FETCH_APPHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: true,\n                    doesMoreItemsExist: getState().appList.appsList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.appsList.nextPageId,\n                    apps: [],\n                },\n            });\n        } else {\n            dispatch({\n                type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: true,\n                    doesMoreItemsExist: getState().appList.watchFacesList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.watchFacesList.nextPageId,\n                    watchFaces: [],\n                },\n            });\n        }\n\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await AppDetails.fetchAppDetails(\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            appId,\n        );\n\n        const app: AppHead = {\n            name: asyncResp.data.app.name,\n            type: asyncResp.data.app.type,\n            developerName: asyncResp.data.app.developer.name,\n            previewImage: asyncResp.data.app.previewImage.uri,\n            icon: asyncResp.data.app.icon.uri,\n            id: asyncResp.data.app.id,\n            isPaid: asyncResp.data.app.isPaid,\n            deviceTypes: asyncResp.data.app.availability.deviceTypes.map(\n                (v) => v.type,\n            ),\n        };\n\n        if (type === 'APP') {\n            dispatch({\n                type: FETCH_APPHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: false,\n                    doesMoreItemsExist: getState().appList.appsList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.appsList.nextPageId,\n                    apps: [],\n                },\n            });\n        } else {\n            dispatch({\n                type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: false,\n                    doesMoreItemsExist: getState().appList.watchFacesList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.watchFacesList.nextPageId,\n                    watchFaces: [],\n                },\n            });\n        }\n\n        if (app.type === 'APP') {\n            dispatch({\n                type: FETCH_APPHEADLIST_NEXT_PAGE,\n                payload: {\n                    apps: [app],\n                    nextPageId: getState().appList.appsList.nextPageId,\n                    doesMoreItemsExist: true,\n                    isNextRequestOngoing: false,\n                },\n            });\n        } else {\n            dispatch({\n                type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n                payload: {\n                    watchFaces: [app],\n                    nextPageId: getState().appList.watchFacesList.nextPageId,\n                    doesMoreItemsExist: true,\n                    isNextRequestOngoing: false,\n                },\n            });\n        }\n    };\n}\n\nexport function fetchNextPageWatchFaceList(): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        dispatch({\n            type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n            payload: {\n                isNextRequestOngoing: true,\n                doesMoreItemsExist: getState().appList.watchFacesList\n                    .doesMoreItemsExist,\n                nextPageId: getState().appList.watchFacesList.nextPageId,\n                watchFaces: [],\n            },\n        });\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await fetchAppsList(\n            CategoryType.allWatchFaces,\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            getState().appList.watchFacesList.nextPageId,\n        );\n        const watchFaceList = asyncResp.data.collection.pagedApps.apps.map(\n            (a) => {\n                const app: AppHead = {\n                    name: a.name,\n                    type: a.type,\n                    developerName: a.developer.name,\n                    previewImage: a.previewImage.uri,\n                    icon: a.icon.uri,\n                    id: a.id,\n                    isPaid: a.isPaid,\n                    deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n                };\n                return app;\n            },\n        );\n\n        dispatch({\n            type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n            payload: {\n                watchFaces: watchFaceList,\n                nextPageId: asyncResp.data.collection.pagedApps.nextPages[0],\n                doesMoreItemsExist: true,\n                isNextRequestOngoing: false,\n            },\n        });\n    };\n}\n\nasync function fetchAppsList(\n    categoryType: CategoryType,\n    accessToken: string,\n    apiUrl: string,\n    nextPageKey?: string,\n) {\n    const bdy = {\n        operationName: 'category',\n        variables: {\n            id: categoryType,\n            pageKey: nextPageKey,\n        },\n        query: getAppListGql,\n    };\n    const result = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            Authorization: `Bearer ${accessToken}`,\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(bdy),\n    });\n    const resultObj = (await result.json()) as FitbitGalleryListResponseRoot;\n    return resultObj;\n}\n\nconst getAppListGql = gql`\n  query category($id: ID!, $pageKey: ID) {\n    collection: category(id: $id) {\n      id\n      name\n      pagedApps(pageOptions: {\n        pageKey: $pageKey,\n        limit: ${20},\n        numNextPages: ${5000},\n        numPrevPages: ${5}\n      }) {\n        ...pagedApps\n      }\n      appType\n    }\n  }\n\n  fragment pagedApps on PagedApps {\n    apps {\n      ...appSummary\n    }\n    nextPages\n    prevPages\n    offset\n  }\n\n  fragment appSummary on App {\n    id\n    availability {\n        deviceTypes {\n            type\n            productName\n        }\n    }\n    previewImage(scale: 1.0) {\n      uri\n    }\n    icon(width: 120, height: 120) {\n      uri\n    }\n    developer {\n      name\n    }\n    name\n    type\n    isPaid\n  }\n`;\n\nexport function searchAppHeaders(\n    searchText: string,\n): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        dispatch({\n            type: SEARCH_APPS_AND_WATCHFACES,\n            payload: {\n                isNextRequestOngoing: true,\n                watchFaces: [],\n            },\n        });\n\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await SearchApps.searchApps(\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            searchText,\n        );\n\n        const apps = asyncResp.data.appResults.apps.map((a) => {\n            const app: AppHead = {\n                name: a.name,\n                type: a.type,\n                developerName: a.name,\n                previewImage: a.previewImage.uri,\n                icon: a.icon.uri,\n                id: a.id,\n                isPaid: a.isPaid,\n                deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n            };\n            return app;\n        });\n\n        const watchfaces = asyncResp.data.clockResults.apps.map((a) => {\n            const app: AppHead = {\n                name: a.name,\n                type: a.type,\n                developerName: a.name,\n                previewImage: a.previewImage.uri,\n                icon: a.icon.uri,\n                id: a.id,\n                isPaid: a.isPaid,\n                deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n            };\n            return app;\n        });\n\n        dispatch({\n            type: SEARCH_APPS_AND_WATCHFACES,\n            payload: {\n                isNextRequestOngoing: false,\n                watchFaces: [...apps, ...watchfaces],\n            },\n        });\n\n        dispatch({\n            type: FETCH_APPHEADLIST_NEXT_PAGE,\n            payload: {\n                apps,\n                nextPageId: getState().appList.appsList.nextPageId,\n                doesMoreItemsExist: getState().appList.appsList\n                    .doesMoreItemsExist,\n                isNextRequestOngoing: getState().appList.appsList\n                    .isNextRequestOngoing,\n            },\n        });\n\n        dispatch({\n            type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n            payload: {\n                watchFaces: watchfaces,\n                nextPageId: getState().appList.watchFacesList.nextPageId,\n                doesMoreItemsExist: getState().appList.watchFacesList\n                    .doesMoreItemsExist,\n                isNextRequestOngoing: getState().appList.watchFacesList\n                    .isNextRequestOngoing,\n            },\n        });\n    };\n}\n","import { AppHeadsListState, AppHead, AppHeadsList } from './types';\n\nexport enum DeviceType {\n    Ionic = 'HIGGS',\n    Versa = 'MESON',\n    Versa_Lite = 'GEMINI',\n    Versa2 = 'MIRA',\n}\n\nexport enum AppType {\n    App = 'APP',\n    WatchFace = 'CLOCK',\n}\n\nexport interface AppListFilter {\n    isPaid?: boolean;\n    appType?: AppType;\n    deviceType?: DeviceType;\n}\n\nexport function filterAppList(\n    fullList: AppHeadsList,\n    filter: AppListFilter,\n): AppHead[] {\n    const filteredApps = fullList.apps.filter((app) => {\n        return compareAgainstFilter(app, filter);\n    });\n    return filteredApps;\n}\n\nfunction compareAgainstFilter(app: AppHead, filter: AppListFilter): boolean {\n    let validAgainstFilter = true;\n    if (filter.isPaid !== undefined) {\n        validAgainstFilter = validAgainstFilter && app.isPaid === filter.isPaid;\n    }\n    if (filter.appType !== undefined) {\n        validAgainstFilter = validAgainstFilter && app.type === filter.appType;\n    }\n    if (filter.deviceType !== undefined) {\n        validAgainstFilter =\n            validAgainstFilter &&\n            app.deviceTypes.findIndex((v) => v === filter.deviceType) >= 0;\n    }\n    return validAgainstFilter;\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\ninterface DropdownItem {\n    displayName: string;\n    id: number;\n}\n\ninterface OwnProps {\n    items: DropdownItem[];\n    prefixText: string;\n    onSelectionChanged: (id: number) => void;\n}\n\ninterface OwnState {\n    selectedItem: DropdownItem;\n    isActive: boolean;\n}\n\nexport class Dropdown extends Component<OwnProps, OwnState> {\n    constructor(props: OwnProps) {\n        super(props);\n        this.state = {\n            selectedItem: props.items[0],\n            isActive: false,\n        };\n    }\n\n    onItemSelect(item: DropdownItem) {\n        this.setState((state) => {\n            return { ...state, selectedItem: item };\n        });\n        this.props.onSelectionChanged(item.id);\n    }\n\n    render() {\n        return (\n            <div\n                className={`dropdown ${this.state.isActive ? 'is-active' : ''}`}\n                onClick={() =>\n                    this.setState((state) => {\n                        return { ...state, isActive: !state.isActive };\n                    })\n                }\n            >\n                <div className=\"dropdown-trigger\">\n                    <button\n                        className=\"button\"\n                        aria-haspopup=\"true\"\n                        aria-controls=\"dropdown-menu\"\n                    >\n                        <span>\n                            {this.props.prefixText +\n                                this.state.selectedItem.displayName}\n                        </span>\n                        <span className=\"icon is-small\">\n                            <FontAwesomeIcon icon={faAngleDown} />\n                        </span>\n                    </button>\n                </div>\n                <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                    <div className=\"dropdown-content\">\n                        {this.props.items.map((item) => {\n                            return (\n                                <a\n                                    href=\"#\"\n                                    className={`dropdown-item ${\n                                        item.id === this.state.selectedItem.id\n                                            ? 'is-active'\n                                            : ''\n                                    }`}\n                                    onClick={() => this.onItemSelect(item)}\n                                >\n                                    {item.displayName}\n                                </a>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard } from '@fortawesome/free-solid-svg-icons';\n\ninterface OwnProps {\n    item: {\n        name: string;\n        type: string;\n        developerName: string;\n        previewImage: string;\n        icon: string;\n        id: string;\n        isPaid: boolean;\n    };\n    onClick: () => void;\n}\n\nexport default class AppItem extends Component<OwnProps> {\n    render() {\n        return (\n            <div\n                className=\"card is-shady is-fullheight\"\n                onClick={this.props.onClick}\n            >\n                <div className=\"card-image\">\n                    <figure className=\"image\">\n                        <img\n                            src={this.props.item.previewImage}\n                            alt=\"Preview Image\"\n                        />\n                    </figure>\n                </div>\n                <div className=\"card-content\">\n                    <div className=\"content\">\n                            <h4>{this.props.item.name}</h4>\n                            {this.props.item.isPaid && <FontAwesomeIcon\n                                icon={faCreditCard}\n                                size=\"2x\"\n                            />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import {\n    SavedAppActionTypes,\n    SavedApp,\n    SAVE_APP,\n    REMOVE_SAVED_APP,\n    LOAD_SAVED_APPS,\n    SavedAppsState,\n    SAVE_SAVED_APPS,\n} from './types';\n\nconst localStorageKeySerializedSavedApps: string = 'serializedSavedApps';\n\n// TODO convert this action to thunk and call save inside\nexport function saveApp(appToSave: SavedApp): SavedAppActionTypes {\n    return {\n        type: SAVE_APP,\n        payload: { savedApp: appToSave },\n    };\n}\n\n// TODO convert this action to thunk and call save inside\nexport function removeSavedApp(appToRemove: SavedApp): SavedAppActionTypes {\n    return {\n        type: REMOVE_SAVED_APP,\n        payload: { savedApp: appToRemove },\n    };\n}\n\nexport function loadSavedApps(): SavedAppActionTypes {\n    const serializedData = localStorage.getItem(\n        localStorageKeySerializedSavedApps,\n    );\n\n    if (!serializedData) {\n        return {\n            type: LOAD_SAVED_APPS,\n            payload: {\n                savedApps: [],\n            },\n        };\n    }\n\n    const data = JSON.parse(serializedData) as SavedApp[];\n    return {\n        type: LOAD_SAVED_APPS,\n        payload: {\n            savedApps: data,\n        },\n    };\n}\n\nexport function saveSavedApps(\n    savedAppsState: SavedAppsState,\n): SavedAppActionTypes {\n    localStorage.setItem(\n        localStorageKeySerializedSavedApps,\n        JSON.stringify(savedAppsState.savedApps),\n    );\n    return {\n        type: SAVE_SAVED_APPS,\n    };\n}\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport { FitbitGalleryAppDetailsResponseApp } from '../../types/fitbitGalleryTypes';\nimport { ConfigurationState } from '../../store/configuration/types';\nimport store, { AppState } from '../../store';\nimport { connect } from 'react-redux';\nimport { AppDetails } from '../../actions/getAppDetails';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faCreditCard } from '@fortawesome/free-solid-svg-icons';\nimport {\n    saveApp,\n    removeSavedApp,\n    saveSavedApps,\n    loadSavedApps,\n} from '../../store/savedApps/actions';\nimport { SavedAppsState } from '../../store/savedApps/types';\n\ninterface OwnProps {\n    // isActive: boolean;\n    appId?: string;\n    onClose: () => void;\n}\n\ninterface AppDetailsData extends FitbitGalleryAppDetailsResponseApp {\n    isSaved: boolean;\n}\n\ninterface StateProps {\n    configs: ConfigurationState;\n    savedApps: SavedAppsState;\n}\n\ninterface OwnState {\n    appsDetails: AppDetailsData[];\n    currentDetails?: AppDetailsData;\n}\n\ntype Props = StateProps & OwnProps;\n\nclass AppItemModal extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            appsDetails: [],\n        };\n    }\n\n    componentWillMount() {\n        store.dispatch(loadSavedApps());\n    }\n\n    async componentDidUpdate(prevProps: Readonly<Props>) {\n        if (this.props.appId && this.props.savedApps !== prevProps.savedApps) {\n            // Saved apps have updated, check for current again.\n            const isSaved =\n                this.props.savedApps.savedApps.findIndex((app) => {\n                    return app.id === this.props.appId;\n                }) >= 0;\n\n            this.setState((state) => {\n                let currentDetails: AppDetailsData | undefined = undefined;\n                if (state.currentDetails) {\n                    currentDetails = {\n                        ...state.currentDetails,\n                        isSaved,\n                    };\n                }\n                return {\n                    ...state,\n                    currentDetails,\n                };\n            });\n        }\n\n        if (this.props.appId && !prevProps.appId) {\n            document.getElementsByTagName('html')[0].style.overflow = 'hidden';\n            document.getElementsByTagName('body')[0].style.overflowY = 'scroll';\n            const currentAppDetails = await this.retrieveAppDetails(\n                this.props.appId!,\n            );\n\n            const isSaved =\n                this.props.savedApps.savedApps.findIndex((app) => {\n                    return app.id === this.props.appId;\n                }) >= 0;\n\n            this.setState((state) => {\n                return {\n                    ...state,\n                    currentDetails: { ...currentAppDetails, isSaved },\n                };\n            });\n        }\n\n        if (!this.props.appId && prevProps.appId) {\n            document.getElementsByTagName('html')[0].style.overflow = '';\n            document.getElementsByTagName('body')[0].style.overflowY = '';\n            this.setState((state) => {\n                return {\n                    ...state,\n                    currentDetails: undefined,\n                };\n            });\n        }\n    }\n\n    saveCurrentApp() {\n        if (!this.props.appId) {\n            return;\n        }\n\n        // TODO convert this action to thunk and call save inside\n        store.dispatch(saveApp({ id: this.props.appId }));\n        store.dispatch(saveSavedApps(store.getState().savedApps));\n    }\n\n    removeCurrentAppFromSaved() {\n        if (!this.props.appId) {\n            return;\n        }\n\n        // TODO convert this action to thunk and call save inside\n        store.dispatch(removeSavedApp({ id: this.props.appId }));\n        store.dispatch(saveSavedApps(store.getState().savedApps));\n    }\n\n    render() {\n        if (!this.state.currentDetails) {\n            return <div />;\n        }\n\n        return (\n            <div\n                id=\"modal-card\"\n                className={`modal ${this.props.appId ? ' is-active' : ''}`}\n            >\n                <div\n                    onClick={this.props.onClose}\n                    className=\"modal-background\"\n                />\n                <div className=\"modal-content is-tiny\">\n                    <div className=\"card\">\n                        <div className=\"card-image\">\n                            <div className=\"columns is-centered is-mobile\">\n                                <div className=\"column is-5\">\n                                    <AliceCarousel\n                                        mouseDragEnabled\n                                        autoPlay\n                                        autoPlayInterval={3000}\n                                        buttonsDisabled\n                                        autoHeight\n                                    >\n                                        {this.state.currentDetails.screenshots.map(\n                                            (screenshot) => {\n                                                return (\n                                                    <div className=\"image\">\n                                                        <img\n                                                            src={screenshot.uri}\n                                                            alt=\"Placeholder image\"\n                                                        />\n                                                    </div>\n                                                );\n                                            },\n                                        )}\n                                    </AliceCarousel>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-content\">\n                            <div\n                                onClick={\n                                    this.state.currentDetails.isSaved\n                                        ? this.removeCurrentAppFromSaved.bind(\n                                              this,\n                                          )\n                                        : this.saveCurrentApp.bind(this)\n                                }\n                            >\n                                <FontAwesomeIcon\n                                    icon={\n                                        this.state.currentDetails.isSaved\n                                            ? fasHeart\n                                            : farHeart\n                                    }\n                                    size=\"3x\"\n                                />\n                            </div>\n                            <div className=\"media\">\n                                <div className=\"media-left\">\n                                    <div className=\"image is-48x48\">\n                                        <img\n                                            src={\n                                                this.state.currentDetails\n                                                    .previewImage.uri\n                                            }\n                                            alt=\"linda barret avatar\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"media-content\">\n                                    <p className=\"title is-4\">\n                                        {this.state.currentDetails.name}\n                                    </p>\n                                    <p className=\"subtitle is-6\">\n                                        {\n                                            this.state.currentDetails.developer\n                                                .name\n                                        }\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"content\">\n                                <div>\n                                    Devices:\n                                    {this.state.currentDetails.availability.deviceTypes.map(\n                                        (device) => (\n                                            <div>{device.productName}</div>\n                                        ),\n                                    )}\n                                </div>\n                                <a\n                                    className=\"button is-info\"\n                                    href={`https://gallery.fitbit.com/details/${\n                                        this.state.currentDetails.id\n                                    }`}\n                                    target=\"_blank\"\n                                >\n                                    To Fitbit\n                                </a>\n                                <a\n                                    className=\"button is-primary\"\n                                    href={`https://gallery.fitbit.com/details/${\n                                        this.state.currentDetails.id\n                                    }/OpenApp`}\n                                    target=\"_blank\"\n                                >\n                                    Open App\n                                </a>\n                                {this.state.currentDetails.isPaid && (\n                                    <div>\n                                        <FontAwesomeIcon\n                                            icon={faCreditCard}\n                                            size=\"2x\"\n                                        />\n                                        <div\n                                            style={{ display: 'inline-block' }}\n                                            className=\"has-text-weight-bold\"\n                                        >\n                                            This application requires a payment\n                                        </div>\n                                    </div>\n                                )}\n                                {this.state.currentDetails.description\n                                    .split('\\n')\n                                    .map((item, i) => {\n                                        return <p key={i}>{item}</p>;\n                                    })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    className=\"modal-close is-large\"\n                    aria-label=\"close\"\n                    onClick={this.props.onClose}\n                />\n            </div>\n        );\n    }\n\n    async retrieveAppDetails(appId: string) {\n        const found = this.state.appsDetails.find((details) => {\n            return details.id === appId;\n        });\n        if (found) {\n            return found;\n        }\n        const response = await AppDetails.fetchAppDetails(\n            this.props.configs.authToken.accessToken,\n            this.props.configs.galleryApiUrl,\n            this.props.appId!,\n        );\n        this.setState((state) => {\n            return {\n                ...state,\n                appsDetails: [\n                    ...state.appsDetails,\n                    { ...response.data.app, isSaved: false },\n                ],\n            };\n        });\n        return response.data.app;\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    return {\n        configs: state.config,\n        savedApps: state.savedApps,\n    };\n}\n\nexport default connect<StateProps, {}, OwnProps, AppState>(mapStateToProps)(\n    // It's somehow treating props as never type. Cast to any for now.\n    AppItemModal as any,\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../store';\nimport { fetchNextPageWatchFaceList } from '../store/appList/actions';\nimport { AppListFilter, DeviceType } from '../store/appList/filter';\nimport { Dropdown } from './DropdownFilter/DropdownFilter';\nimport { AppHeadsList } from '../store/appList/types';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AppListView from './AppListView';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    { displayName: 'Versa', id: DeviceFilterEnum.Versa, value: DeviceType.Versa },\n    { displayName: 'Versa Lite', id: DeviceFilterEnum.Versa_Lite, value: DeviceType.Versa_Lite },\n    { displayName: 'Versa 2', id: DeviceFilterEnum.Versa2, value: DeviceType.Versa2 },\n    { displayName: 'Ionic', id: DeviceFilterEnum.Ionic, value: DeviceType.Ionic },\n];\n\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n}\n\ninterface StateProps {\n    watchFaceList: AppHeadsList;\n}\n\ninterface DispatchProps {\n    fetchWatchFaceListNextPage: () => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass WatchFaceList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        fetchMoreApps={async () => {\n                            await this.props.fetchWatchFaceListNextPage();\n                        }}\n                        allApps={this.props.watchFaceList}\n                        filter={this.state.currentFilter}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        watchFaceList: state.appList.watchFacesList,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        fetchWatchFaceListNextPage: async () => {\n            await dispatch(fetchNextPageWatchFaceList());\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(WatchFaceList);\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport AppItem from './AppItem';\nimport AppItemModal from './AppModal/AppItemModal';\nimport { filterAppList, AppListFilter } from '../store/appList/filter';\nimport { AppHead, AppHeadsList } from '../store/appList/types';\n\ninterface OwnProps {\n    allApps: AppHeadsList;\n    filter: AppListFilter;\n    fetchMoreApps?: () => Promise<void>;\n}\n\ninterface OwnState {\n    modalAppIdShow?: string;\n    filteredAppList: AppHead[];\n}\n\ntype Props = OwnProps;\n\nexport default class AppListView extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            filteredAppList: filterAppList(\n                this.props.allApps,\n                this.props.filter,\n            ),\n        };\n        this.onScroll = this.onScroll.bind(this);\n    }\n\n    async onScroll(event: Event) {\n        if (!event.target) {\n            return;\n        }\n\n        const element = (event.target as any).scrollingElement || event.target;\n        if (\n            (element as any).scrollHeight - (element as any).scrollTop <=\n            (element as any).clientHeight * 2\n        ) {\n            if (\n                this.props.fetchMoreApps &&\n                !this.props.allApps.isNextRequestOngoing\n            ) {\n                await this.props.fetchMoreApps();\n            }\n        }\n    }\n\n    componentWillMount() {\n        if (\n            this.props.allApps.apps.length < 1 &&\n            this.props.fetchMoreApps &&\n            !this.props.allApps.isNextRequestOngoing\n        ) {\n            this.props.fetchMoreApps();\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.onScroll, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll, false);\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<Props>,\n        prevState: Readonly<OwnState>,\n    ) {\n        if (\n            prevProps.allApps !== this.props.allApps ||\n            prevProps.filter !== this.props.filter\n        ) {\n            this.setState((state) => {\n                return {\n                    ...state,\n                    filteredAppList: filterAppList(\n                        this.props.allApps,\n                        this.props.filter,\n                    ),\n                };\n            });\n        }\n    }\n\n    onCloseModal() {}\n\n    private loadingRowsPromises: Promise<void>[] = [];\n\n    async loadMoreItems(): Promise<void> {\n        if (!this.props.fetchMoreApps) {\n            return;\n        }\n        if (this.props.allApps.isNextRequestOngoing) {\n        }\n        await Promise.all(this.loadingRowsPromises);\n        const fetching = this.props.fetchMoreApps();\n        this.loadingRowsPromises.push(fetching);\n        await fetching;\n        for (let i = 0; i < this.loadingRowsPromises.length; i++) {\n            if (this.loadingRowsPromises[i] === fetching) {\n                this.loadingRowsPromises.splice(i, 1);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"columns is-multiline is-mobile\">\n                    {this.state.filteredAppList.map((app) => (\n                        <div\n                            className=\"column is-half-mobile is-2-desktop\"\n                            key={app.id}\n                        >\n                            <AppItem\n                                item={app}\n                                onClick={() => {\n                                    this.setState((state) => {\n                                        return {\n                                            ...state,\n                                            modalAppIdShow: app.id,\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>\n                    ))}\n                </div>\n                {this.props.fetchMoreApps ? (\n                    <div\n                        className={`button is-primary ${\n                            this.props.allApps.isNextRequestOngoing\n                                ? 'is-loading'\n                                : ''\n                        }`}\n                        onClick={\n                            this.props.allApps.isNextRequestOngoing\n                                ? () => {}\n                                : this.loadMoreItems.bind(this)\n                        }\n                    >\n                        Load more\n                    </div>\n                ) : (\n                    ''\n                )}\n\n                <AppItemModal\n                    appId={this.state.modalAppIdShow}\n                    onClose={() => {\n                        this.setState((state) => {\n                            return {\n                                ...state,\n                                modalAppIdShow: undefined,\n                            };\n                        });\n                    }}\n                    // isActive={this.state.isModalActive}\n                />\n            </div>\n        );\n    }\n}\n\n// function mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n//     console.log('mapping...');\n//     return {\n//         fetchNextPageAppList,\n//         appListState: state.appList,\n//     };\n// }\n\n// function mapDispatchToProps(\n//     dispatch: ThunkDispatch<{}, {}, any>,\n//     ownProps: OwnProps,\n// ): DispatchProps {\n//     return {\n//         thunkFetchAppList: async () => {\n//             await dispatch(fetchNextPageAppList());\n//             console.log('Fetch completed [UI]');\n//         },\n//     };\n// }\n\n// export default connect<StateProps, DispatchProps, OwnProps, AppState>(\n//     mapStateToProps,\n//     mapDispatchToProps,\n// )(AppList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../store';\nimport { fetchNextPageAppList } from '../store/appList/actions';\nimport { AppListFilter, DeviceType } from '../store/appList/filter';\nimport { Dropdown } from './DropdownFilter/DropdownFilter';\nimport { AppHeadsList } from '../store/appList/types';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AppListView from './AppListView';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    { displayName: 'Versa', id: DeviceFilterEnum.Versa, value: DeviceType.Versa },\n    { displayName: 'Versa Lite', id: DeviceFilterEnum.Versa_Lite, value: DeviceType.Versa_Lite },\n    { displayName: 'Versa 2', id: DeviceFilterEnum.Versa2, value: DeviceType.Versa2 },\n    { displayName: 'Ionic', id: DeviceFilterEnum.Ionic, value: DeviceType.Ionic },\n];\n\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n}\n\ninterface StateProps {\n    watchFacesList: AppHeadsList;\n}\n\ninterface DispatchProps {\n    fetchWatchFacesListNextPage: () => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass AppsList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        fetchMoreApps={async () => {\n                            await this.props.fetchWatchFacesListNextPage();\n                        }}\n                        allApps={this.props.watchFacesList}\n                        filter={this.state.currentFilter}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        watchFacesList: state.appList.appsList,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        fetchWatchFacesListNextPage: async () => {\n            await dispatch(fetchNextPageAppList());\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AppsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppListFilter, AppType, DeviceType } from '../../store/appList/filter';\nimport { AppHeadsList, AppHead } from '../../store/appList/types';\nimport { Dropdown } from '../DropdownFilter/DropdownFilter';\nimport AppListView from '../AppListView';\nimport { AppState } from '../../store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { SavedApp } from '../../store/savedApps/types';\nimport { fetchAppHead } from '../../store/appList/actions';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    { displayName: 'Versa', id: DeviceFilterEnum.Versa, value: DeviceType.Versa },\n    { displayName: 'Versa Lite', id: DeviceFilterEnum.Versa_Lite, value: DeviceType.Versa_Lite },\n    { displayName: 'Versa 2', id: DeviceFilterEnum.Versa2, value: DeviceType.Versa2 },\n    { displayName: 'Ionic', id: DeviceFilterEnum.Ionic, value: DeviceType.Ionic },\n];\n\nenum TypeFilterEnum {\n    All,\n    WatchFaces,\n    Apps,\n}\n\nconst typeFilterDisplay: {\n    displayName: string;\n    id: TypeFilterEnum;\n    value: AppType | undefined;\n}[] = [\n    { displayName: 'All', id: TypeFilterEnum.All, value: undefined },\n    {\n        displayName: 'WatchFaces',\n        id: TypeFilterEnum.WatchFaces,\n        value: AppType.WatchFace,\n    },\n    { displayName: 'Apps', id: TypeFilterEnum.Apps, value: AppType.App },\n];\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n    filteredSavedApps: AppHeadsList;\n}\n\ninterface StateProps {\n    savedWatchFacesList: AppHeadsList;\n    savedAppsList: AppHeadsList;\n    savedApps: SavedApp[];\n}\n\ninterface DispatchProps {\n    fetchAppHead: (id: string, appType: AppType) => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass SavedAppsList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n            filteredSavedApps: {\n                apps: [],\n                doesMoreItemsExist: true,\n                isNextRequestOngoing: false,\n                nextPageId: '',\n            },\n        };\n    }\n\n    private currentlyDownloadingItems: string[] = [];\n\n    async downloadMissingItem(itemId: string) {\n        if (this.currentlyDownloadingItems.findIndex((x) => x === itemId) < 0) {\n            this.currentlyDownloadingItems.push(itemId);\n            await this.props.fetchAppHead(itemId, AppType.App);\n            await this.props.fetchAppHead(itemId, AppType.WatchFace);\n        }\n\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<Props>,\n        prevState: Readonly<OwnState>,\n    ) {\n        if (\n            prevProps.savedApps !== this.props.savedApps ||\n            prevProps.savedAppsList !== this.props.savedAppsList ||\n            prevProps.savedWatchFacesList !== this.props.savedWatchFacesList\n        ) {\n            this.setState((state) => {\n                const foundList: AppHead[] = [];\n                const notFoundList: string[] = [];\n                this.props.savedApps.forEach((element) => {\n                    let found = this.props.savedAppsList.apps.find(\n                        (a) => a.id === element.id,\n                    );\n                    if (!found) {\n                        found = this.props.savedWatchFacesList.apps.find(\n                            (a) => a.id === element.id,\n                        );\n                    }\n                    if (found) {\n                        foundList.push(found);\n                    } else {\n                        notFoundList.push(element.id);\n                    }\n                });\n                for (let i = 0; i < notFoundList.length; i++) {\n                    const element = notFoundList[i];\n                    this.downloadMissingItem(element);\n                }\n                return {\n                    ...state,\n                    filteredSavedApps: {\n                        apps: [...foundList],\n                        doesMoreItemsExist: false,\n                        isNextRequestOngoing:\n                            this.props.savedAppsList.isNextRequestOngoing ||\n                            this.props.savedWatchFacesList.isNextRequestOngoing,\n                        nextPageId: '!',\n                    },\n                };\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Type: \"\n                        items={typeFilterDisplay}\n                        onSelectionChanged={(id: TypeFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        appType: typeFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        allApps={this.state.filteredSavedApps}\n                        filter={this.state.currentFilter}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        savedWatchFacesList: state.appList.watchFacesList,\n        savedAppsList: state.appList.appsList,\n        savedApps: state.savedApps.savedApps,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        fetchAppHead: async (id: string, appType: AppType) => {\n            switch (appType) {\n                case AppType.App:\n                    await dispatch(fetchAppHead(id, 'APP'));\n                    break;\n                case AppType.WatchFace:\n                    await dispatch(fetchAppHead(id, 'WATCHFACE'));\n                default:\n                    break;\n            }\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SavedAppsList);\n","import React, { Component, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { AppListFilter, AppType, DeviceType } from '../../store/appList/filter';\nimport { AppHeadsList, AppHead } from '../../store/appList/types';\nimport { Dropdown } from '../DropdownFilter/DropdownFilter';\nimport AppListView from '../AppListView';\nimport { AppState } from '../../store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { SavedApp } from '../../store/savedApps/types';\nimport { fetchAppHead, searchAppHeaders } from '../../store/appList/actions';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    {\n        displayName: 'Versa',\n        id: DeviceFilterEnum.Versa,\n        value: DeviceType.Versa,\n    },\n    {\n        displayName: 'Versa Lite',\n        id: DeviceFilterEnum.Versa_Lite,\n        value: DeviceType.Versa_Lite,\n    },\n    {\n        displayName: 'Versa 2',\n        id: DeviceFilterEnum.Versa2,\n        value: DeviceType.Versa2,\n    },\n    {\n        displayName: 'Ionic',\n        id: DeviceFilterEnum.Ionic,\n        value: DeviceType.Ionic,\n    },\n];\n\nenum TypeFilterEnum {\n    All,\n    WatchFaces,\n    Apps,\n}\n\nconst typeFilterDisplay: {\n    displayName: string;\n    id: TypeFilterEnum;\n    value: AppType | undefined;\n}[] = [\n    { displayName: 'All', id: TypeFilterEnum.All, value: undefined },\n    {\n        displayName: 'WatchFaces',\n        id: TypeFilterEnum.WatchFaces,\n        value: AppType.WatchFace,\n    },\n    { displayName: 'Apps', id: TypeFilterEnum.Apps, value: AppType.App },\n];\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n    searchInputValue: string;\n}\n\ninterface StateProps {\n    searchAppsList: AppHeadsList;\n}\n\ninterface DispatchProps {\n    searchForApps: (searchText: string) => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass SavedAppsList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n            searchInputValue: '',\n        };\n    }\n\n    executeSearch() {\n        console.log('tettete');\n\n        this.props.searchForApps(this.state.searchInputValue);\n    }\n\n    updateInputValue(evt: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            ...this.state,\n            searchInputValue: (evt.target as any).value,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <input\n                    value={this.state.searchInputValue}\n                    onChange={(evt) => this.updateInputValue(evt)}\n                    onKeyUp={(e) => {\n                        if (\n                            e.keyCode === 13 &&\n                            !this.props.searchAppsList.isNextRequestOngoing\n                        ) {\n                            this.executeSearch();\n                        }\n                    }}\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Search for apps\"\n                />\n                <button\n                    className={`button is-primary ${\n                        this.props.searchAppsList.isNextRequestOngoing\n                            ? 'is-loading'\n                            : ''\n                    }`}\n                    onClick={\n                        this.props.searchAppsList.isNextRequestOngoing\n                            ? () => {}\n                            : this.executeSearch.bind(this)\n                    }\n                >\n                    Search\n                </button>\n                <div>\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Type: \"\n                        items={typeFilterDisplay}\n                        onSelectionChanged={(id: TypeFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        appType: typeFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        allApps={this.props.searchAppsList}\n                        filter={this.state.currentFilter}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        searchAppsList: state.appList.lastSearchResult,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        searchForApps: async (searchText: string) => {\n            await dispatch(searchAppHeaders(searchText));\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SavedAppsList);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nexport default class SavedAppsList extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <section className=\"articles\">\n                    <div className=\"column is-8 is-offset-2\">\n                        <div className=\"card article\">\n                            <div className=\"card-content\">\n                                <div className=\"media\">\n                                    <div className=\"media-content has-text-centered\">\n                                        <p className=\"title article-title\">About</p>\n                                    </div>\n                                </div>\n                                <div className=\"content article-body\">\n                                    <p>This website is NOT affiliated with Fitbit</p>\n                                    <p>This website was made as a fun side project. I'm not making any money of this.</p>\n\n                                    <p>\n                                        This website is not intended to replace any of Fitbit apps or websites.\n                                    </p>\n                                    <h3 className=\"has-text-centered\">Transparency</h3>\n                                    <p>All your saved apps are saved only in your browser.</p>\n                                    <p>For anyone concerned, you can look at the source files here</p>\n                                    <a\n                                        href=\"https://github.com/Woyken/fitbitGalleryW\"\n                                        target=\"_blank\"\n                                        className=\"button is-primary is-medium\"\n                                    >\n                                        <span className=\"icon\">\n                                            <FontAwesomeIcon icon={faGithub}></FontAwesomeIcon>\n                                        </span>\n                                        <span>Github</span>\n                                    </a>\n                                    <p></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.sass';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport WatchFaceList from './components/WatchFaceList';\nimport AppsList from './components/AppsList';\nimport SavedAppsList from './components/SavedAppsList/SavedAppsList';\nimport About from './components/About/About';\nimport SearchAppsList from './components/SearchAppsList/SearchAppsList';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Tabs selectedTabClassName=\"is-active\">\n                        <div className=\"tabs is-centered is-boxed\">\n                            <TabList>\n                                <Tab>\n                                    <a>Watch Faces</a>\n                                </Tab>\n                                <Tab>\n                                    <a>Apps</a>\n                                </Tab>\n                                <Tab>\n                                    <a>Search</a>\n                                </Tab>\n                                <Tab>\n                                    <a>Saved</a>\n                                </Tab>\n                                <Tab>\n                                    <a>About</a>\n                                </Tab>\n                            </TabList>\n                        </div>\n\n                        <TabPanel>\n                            <WatchFaceList />\n                        </TabPanel>\n                        <TabPanel>\n                            <AppsList />\n                        </TabPanel>\n                        <TabPanel>\n                            <SearchAppsList />\n                        </TabPanel>\n                        <TabPanel>\n                            <SavedAppsList />\n                        </TabPanel>\n                        <TabPanel>\n                            <About />\n                        </TabPanel>\n                    </Tabs>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// tslint:disable-next-line: import-name\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}