{"version":3,"sources":["store/appList/types.ts","store/appList/reducers.ts","store/configuration/types.ts","store/configuration/reducers.ts","store/savedApps/types.ts","store/savedApps/reducers.ts","store/index.ts","actions/authentication.ts","store/configuration/actions.ts","store/appList/actions.ts","actions/getAppDetails.ts","actions/searchApps.ts","store/appList/filter.ts","components/DropdownFilter/DropdownFilter.tsx","components/AppItem.tsx","store/savedApps/actions.ts","components/AppModal/AppItemModal.tsx","components/WatchFaceList.tsx","components/AppListView.tsx","components/AppsList.tsx","components/SavedAppsList/SavedAppsList.tsx","components/SearchAppsList/SearchAppsList.tsx","components/About/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FETCH_WATCHFACEHEADLIST_NEXT_PAGE","FETCH_APPHEADLIST_NEXT_PAGE","SEARCH_APPS_AND_WATCHFACES","initialState","appsList","apps","doesMoreItemsExist","nextPageId","isNextRequestOngoing","watchFacesList","lastSearchResult","FETCH_CONFIGURATION_DATA","authToken","accessToken","expiresAt","galleryApiUrl","SAVE_APP","REMOVE_SAVED_APP","LOAD_SAVED_APPS","SAVE_SAVED_APPS","savedApps","rootReducer","combineReducers","appList","state","action","type","fullAppsList","payload","filteredAppsList","tempMap","Map","item","has","id","set","push","watchFaces","config","savedApp","filter","app","middleware","reduxThunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","getRequestWrappedCorsEverywhere","url","a","pRetry","fetch","res","json","isResponseValid","auth","apiConfig","Date","now","localStorageAuthCacheName","getAuthTokenFromLocalCache","str","localStorage","getItem","JSON","parse","updateAuthTokenToLocalCache","setItem","stringify","getAuthTokenFromJsonStorage","response","updateAuthTokenToJsonStorage","method","body","getAuthTokenFromFitbit","getAuthToken","localCache","jsonResponse","fitbitResponse","catch","err","console","error","fetchConfigurationData","getAuthTokenAndEndpoint","CategoryType","AppDetails","apiUrl","appId","getAppDetails","gql","bdy","operationName","variables","query","headers","Authorization","result","SearchApps","searchText","querySearch","text","fetchAppHead","dispatch","getState","fetchAppDetails","asyncResp","name","data","developerName","developer","previewImage","uri","icon","isPaid","deviceTypes","availability","map","v","fetchAppsList","categoryType","nextPageKey","pageKey","getAppListGql","resultObj","DeviceType","AppType","searchAppHeaders","searchApps","appResults","watchfaces","clockResults","filterAppList","fullList","validAgainstFilter","undefined","appType","deviceType","findIndex","compareAgainstFilter","Dropdown","props","selectedItem","items","isActive","this","setState","onSelectionChanged","className","onClick","prefixText","displayName","faAngleDown","role","href","onItemSelect","Component","AppItem","src","alt","faCreditCard","size","localStorageKeySerializedSavedApps","saveSavedApps","savedAppsState","AppItemModal","appsDetails","serializedData","loadSavedApps","prevProps","isSaved","currentDetails","document","getElementsByTagName","style","overflow","overflowY","retrieveAppDetails","currentAppDetails","appToSave","appToRemove","onClose","autoPlay","autoPlayInterval","buttonsDisabled","autoHeight","screenshots","screenshot","removeCurrentAppFromSaved","bind","saveCurrentApp","fasHeart","farHeart","device","productName","target","rel","display","description","split","i","found","find","details","configs","connect","PriceFilterEnum","ownProps","AppListView","loadingRowsPromises","filteredAppList","allApps","onScroll","event","element","scrollingElement","scrollHeight","scrollTop","clientHeight","fetchMoreApps","length","addEventListener","removeEventListener","prevState","Promise","all","fetching","splice","modalAppIdShow","loadMoreItems","DeviceFilterEnum","priceFilterDisplay","PaidFree","value","Free","Paid","deviceFilterDisplay","All","Versa","Versa_Lite","Versa2","Ionic","WatchFaceList","currentFilter","fetchWatchFaceListNextPage","watchFaceList","log","allWatchFaces","collection","pagedApps","nextPages","AppsList","fetchWatchFacesListNextPage","TypeFilterEnum","typeFilterDisplay","WatchFaces","WatchFace","Apps","App","SavedAppsList","currentlyDownloadingItems","filteredSavedApps","itemId","x","savedAppsList","savedWatchFacesList","foundList","notFoundList","forEach","downloadMissingItem","faGithub","searchInputValue","searchForApps","evt","onChange","updateInputValue","onKeyUp","e","keyCode","searchAppsList","executeSearch","placeholder","selectedTabClassName","SearchAppsList","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ac1007d.chunk.js","sourcesContent":["export interface AppHead {\n    name: string;\n    type: string;\n    developerName: string;\n    previewImage: string;\n    icon: string;\n    id: string;\n    isPaid: boolean;\n    deviceTypes: string[];\n}\n\nexport interface AppHeadsList {\n    apps: AppHead[];\n    doesMoreItemsExist: boolean;\n    nextPageId: string;\n    isNextRequestOngoing: boolean;\n}\n\nexport interface AppHeadsListState {\n    appsList: AppHeadsList;\n    watchFacesList: AppHeadsList;\n    lastSearchResult: AppHeadsList;\n}\n\nexport const FETCH_WATCHFACEHEADLIST_NEXT_PAGE =\n    'FETCH_WATCHFACEHEADLIST_NEXT_PAGE';\nexport const FETCH_APPHEADLIST_NEXT_PAGE = 'FETCH_APPHEADLIST_NEXT_PAGE';\nexport const SEARCH_APPS_AND_WATCHFACES = 'SEARCH_APPS_AND_WATCHFACES';\n\ninterface FetchAppHeadsListNextPage {\n    type: typeof FETCH_APPHEADLIST_NEXT_PAGE;\n    payload: {\n        apps: AppHead[];\n        isNextRequestOngoing: boolean;\n        doesMoreItemsExist: boolean;\n        nextPageId: string;\n    };\n}\n\ninterface FetchWatchFaceHeadsListNextPage {\n    type: typeof FETCH_WATCHFACEHEADLIST_NEXT_PAGE;\n    payload: {\n        watchFaces: AppHead[];\n        isNextRequestOngoing: boolean;\n        doesMoreItemsExist: boolean;\n        nextPageId: string;\n    };\n}\n\ninterface SearchAppsAndWatchfaces {\n    type: typeof SEARCH_APPS_AND_WATCHFACES;\n    payload: {\n        watchFaces: AppHead[];\n        isNextRequestOngoing: boolean;\n    };\n}\n\nexport type AppListActionTypes =\n    | FetchAppHeadsListNextPage\n    | FetchWatchFaceHeadsListNextPage\n    | SearchAppsAndWatchfaces;\n","import {\n    AppListActionTypes,\n    AppHeadsListState,\n    FETCH_APPHEADLIST_NEXT_PAGE,\n    FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n    AppHead,\n    SEARCH_APPS_AND_WATCHFACES,\n} from './types';\n\nconst initialState: AppHeadsListState = {\n    appsList: {\n        apps: [],\n        doesMoreItemsExist: true,\n        nextPageId: '',\n        isNextRequestOngoing: false,\n    },\n    watchFacesList: {\n        apps: [],\n        doesMoreItemsExist: true,\n        nextPageId: '',\n        isNextRequestOngoing: false,\n    },\n    lastSearchResult: {\n        apps: [],\n        doesMoreItemsExist: false,\n        isNextRequestOngoing: false,\n        nextPageId: '',\n    },\n};\n\nexport function appListReducer(\n    state = initialState,\n    action: AppListActionTypes,\n): AppHeadsListState {\n    switch (action.type) {\n        case FETCH_APPHEADLIST_NEXT_PAGE: {\n            const fullAppsList = [\n                ...state.appsList.apps,\n                ...action.payload.apps,\n            ];\n            const filteredAppsList: AppHead[] = [];\n            const tempMap = new Map<string, boolean>();\n            for (const item of fullAppsList) {\n                if (!tempMap.has(item.id)) {\n                    tempMap.set(item.id, true);\n                    filteredAppsList.push(item);\n                }\n            }\n            return {\n                appsList: {\n                    apps: filteredAppsList,\n                    doesMoreItemsExist: action.payload.doesMoreItemsExist,\n                    nextPageId: action.payload.nextPageId,\n                    isNextRequestOngoing: action.payload.isNextRequestOngoing,\n                },\n                watchFacesList: state.watchFacesList,\n                lastSearchResult: state.lastSearchResult,\n            };\n        }\n\n        case FETCH_WATCHFACEHEADLIST_NEXT_PAGE: {\n            const fullAppsList = [\n                ...state.watchFacesList.apps,\n                ...action.payload.watchFaces,\n            ];\n            const filteredAppsList: AppHead[] = [];\n            const tempMap = new Map<string, boolean>();\n            for (const item of fullAppsList) {\n                if (!tempMap.has(item.id)) {\n                    tempMap.set(item.id, true);\n                    filteredAppsList.push(item);\n                }\n            }\n            return {\n                watchFacesList: {\n                    apps: filteredAppsList,\n                    doesMoreItemsExist: action.payload.doesMoreItemsExist,\n                    nextPageId: action.payload.nextPageId,\n                    isNextRequestOngoing: action.payload.isNextRequestOngoing,\n                },\n                appsList: state.appsList,\n                lastSearchResult: state.lastSearchResult,\n            };\n        }\n\n        case SEARCH_APPS_AND_WATCHFACES: {\n            return {\n                appsList: state.appsList,\n                watchFacesList: state.watchFacesList,\n                lastSearchResult: {\n                    apps: [...action.payload.watchFaces],\n                    doesMoreItemsExist: false,\n                    nextPageId: '',\n                    isNextRequestOngoing: action.payload.isNextRequestOngoing,\n                },\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n","import { FitbitConfigurationResponseApiConfig } from \"../../types/fitbitGalleryTypes\";\n\nexport interface AuthenticationToken {\n    accessToken: string;\n    expiresAt: number;\n}\n\nexport interface ConfigurationState {\n    galleryApiUrl: string;\n    authToken: AuthenticationToken;\n}\n\nexport const FETCH_CONFIGURATION_DATA = 'FETCH_CONFIGURATION_DATA';\n\ninterface FetchConfigurationData {\n    type: typeof FETCH_CONFIGURATION_DATA;\n    payload: FitbitConfigurationResponseApiConfig;\n}\n\nexport type ConfigurationActionTypes = FetchConfigurationData;\n","import {\n    ConfigurationState,\n    ConfigurationActionTypes,\n    FETCH_CONFIGURATION_DATA,\n} from './types';\n\nconst initialState: ConfigurationState = {\n    authToken: {\n        accessToken: '',\n        expiresAt: 0,\n    },\n    galleryApiUrl: '',\n};\n\nexport function configurationReducer(\n    state = initialState,\n    action: ConfigurationActionTypes,\n): ConfigurationState {\n    switch (action.type) {\n        case FETCH_CONFIGURATION_DATA:\n            // Just replace the whole state object with new data.\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","export interface SavedApp {\n    id: string;\n}\n\nexport interface SavedAppsState {\n    savedApps: SavedApp[];\n}\n\nexport const SAVE_APP = 'SAVE_APP';\nexport const REMOVE_SAVED_APP = 'REMOVE_SAVED_APP';\nexport const LOAD_SAVED_APPS = 'LOAD_SAVED_APPS';\nexport const SAVE_SAVED_APPS = 'SAVE_SAVED_APPS';\n\ninterface SaveApp {\n    type: typeof SAVE_APP;\n    payload: {\n        savedApp: SavedApp;\n    };\n}\n\ninterface RemoveSavedApp {\n    type: typeof REMOVE_SAVED_APP;\n    payload: {\n        savedApp: SavedApp;\n    };\n}\n\ninterface LoadSavedApps {\n    type: typeof LOAD_SAVED_APPS;\n    payload: {\n        savedApps: SavedApp[];\n    };\n}\n\ninterface SaveSavedApps {\n    type: typeof SAVE_SAVED_APPS;\n}\n\nexport type SavedAppActionTypes = SaveApp | RemoveSavedApp | LoadSavedApps | SaveSavedApps;\n","import {\n    SavedAppsState,\n    SavedAppActionTypes,\n    SAVE_APP,\n    REMOVE_SAVED_APP,\n    LOAD_SAVED_APPS,\n    SAVE_SAVED_APPS,\n} from './types';\n\nconst initialState: SavedAppsState = {\n    savedApps: [],\n};\n\nexport function savedAppsReducer(\n    state = initialState,\n    action: SavedAppActionTypes,\n): SavedAppsState {\n    switch (action.type) {\n        case SAVE_APP:\n            return {\n                ...state,\n                savedApps: [...state.savedApps, action.payload.savedApp],\n            };\n\n        case REMOVE_SAVED_APP:\n            return {\n                ...state,\n                savedApps: [\n                    ...state.savedApps.filter((app) => {\n                        return app.id !== action.payload.savedApp.id;\n                    }),\n                ],\n            };\n\n        case LOAD_SAVED_APPS:\n            return {\n                ...state,\n                savedApps: [...action.payload.savedApps],\n            };\n\n        case SAVE_SAVED_APPS:\n            // Don't update store here.\n            return state;\n\n        default:\n            return state;\n    }\n}\n","// import { systemReducer } from './system/reducers';\nimport { appListReducer } from './appList/reducers';\nimport { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { configurationReducer } from './configuration/reducers';\nimport { savedAppsReducer } from './savedApps/reducers';\n\nconst rootReducer = combineReducers({\n    appList: appListReducer,\n    config: configurationReducer,\n    savedApps: savedAppsReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst initialState = {};\n\nconst middleware = [reduxThunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n            : (f: any) => f,\n    ),\n);\n\nexport default store;\n","import pRetry from \"p-retry\";\n\nexport interface FitbitAuthResponse {\n    apiConfig: APIConfig;\n}\n\nexport interface APIConfig {\n    galleryApiUrl: string;\n    authToken:     AuthToken;\n}\n\nexport interface AuthToken {\n    accessToken: string;\n    expiresAt:   number;\n}\n\n/**\n * Be careful to not make too many requests to this endpoint, this heroku instance is not that powerful\n * @param url url to send request with cors ignored\n */\nasync function getRequestWrappedCorsEverywhere<T>(url: string): Promise<T> {\n    const res = await pRetry(() => fetch(`https://woyken-service.herokuapp.com/cors-everywhere/${url}`));\n    // Let's hope T type was passed correctly\n    return await res.json() as T;\n}\n\n\nfunction isResponseValid(auth: FitbitAuthResponse): boolean {\n    if (\n        typeof auth?.apiConfig?.authToken?.accessToken !== 'string' ||\n        typeof auth?.apiConfig?.authToken?.expiresAt !== 'number' ||\n        typeof auth?.apiConfig.galleryApiUrl !== 'string' ||\n        // Expired?\n        auth.apiConfig.authToken.expiresAt < Date.now() / 1000\n    ) {\n        return false;\n    }\n    return true;\n}\n\nconst localStorageAuthCacheName = 'AuthCacheName';\n\n/**\n * Level 1 cache\n */\nfunction getAuthTokenFromLocalCache(): FitbitAuthResponse | undefined {\n    const str = localStorage.getItem(localStorageAuthCacheName);\n    if (!str)\n        return;\n    const auth = JSON.parse(str) as FitbitAuthResponse;\n    if (!isResponseValid(auth)) {\n        return;\n    }\n    return auth;\n}\n\nfunction updateAuthTokenToLocalCache(auth: FitbitAuthResponse): void {\n    localStorage.setItem(localStorageAuthCacheName, JSON.stringify(auth));\n}\n\n/**\n * Level 2 cache\n */\nasync function getAuthTokenFromJsonStorage(): Promise<FitbitAuthResponse | undefined> {\n    // Since this is such small app without backend, this will be good enough as a cache.\n    // Otherwise would have to host something proper.\n    try {\n        const response = await (await fetch('https://api.npoint.io/a0a34f7a0a2a6e6f5272')).json() as FitbitAuthResponse;\n        // Some validation, just in case.\n        if (!isResponseValid(response)) {\n            // Invalid saved json. Ignore it.\n            return;\n        }\n\n        return response;\n    } catch (error) {\n        // If for some reason it fails, ignore it.\n    }\n}\n\nasync function updateAuthTokenToJsonStorage(auth: FitbitAuthResponse): Promise<void> {\n    // Without backend there's no real way to ensure this session is the only one writing to storage at a time.\n    // It will be good enough for now.\n    await fetch('https://api.npoint.io/a0a34f7a0a2a6e6f5272', {\n        method: 'POST',\n        body: JSON.stringify(auth),\n    });\n}\n\n/**\n * Source of truth\n */\nasync function getAuthTokenFromFitbit(): Promise<FitbitAuthResponse> {\n    // Since fitbit doesn't allow requests to it's _internal endpoint from other pages and we don't have backend here.\n    // Workaround using corsEverywhere, This request is considered pricy and should be used as rarely as possible.\n    return await getRequestWrappedCorsEverywhere<FitbitAuthResponse>('https://gallery.fitbit.com/_internal/config');\n}\n\nexport async function getAuthToken(): Promise<FitbitAuthResponse> {\n    // Check JsonStorage endpoint for valid json\n    // If failed, fetch new from Fitbit\n    // Update json storage with new token\n    const localCache = getAuthTokenFromLocalCache();\n    if (localCache) {\n        return localCache;\n    }\n\n    const jsonResponse = await getAuthTokenFromJsonStorage();\n    if (jsonResponse) {\n        // This cache could be update by others.\n        updateAuthTokenToLocalCache(jsonResponse);\n        return jsonResponse;\n    }\n\n    // Let's hope this doesn't fail\n    const fitbitResponse = await getAuthTokenFromFitbit();\n\n    // Fitbit is our source of truth, update both caches.\n    updateAuthTokenToLocalCache(fitbitResponse);\n    // Fire and forget\n    updateAuthTokenToJsonStorage(fitbitResponse)\n        .catch((err: any) => console.error('When updating JSON storage error occurred', err));\n\n\n    return fitbitResponse;\n}\n","import { ConfigurationActionTypes, FETCH_CONFIGURATION_DATA } from './types';\nimport { FitbitConfigurationResponseRoot } from '../../types/fitbitGalleryTypes';\nimport { getAuthToken } from '../../actions/authentication';\n\nexport async function fetchConfigurationData(): Promise<\n    ConfigurationActionTypes\n> {\n    const config = await getAuthTokenAndEndpoint();\n    return {\n        type: FETCH_CONFIGURATION_DATA,\n        payload: config.apiConfig,\n    };\n}\n\n\nasync function getAuthTokenAndEndpoint(): Promise<FitbitConfigurationResponseRoot> {\n    return getAuthToken();\n}\n","import {\n    AppListActionTypes,\n    AppHead,\n    FETCH_APPHEADLIST_NEXT_PAGE,\n    FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n    SEARCH_APPS_AND_WATCHFACES,\n} from './types';\nimport { AppState } from '..';\nimport { ThunkAction } from 'redux-thunk';\nimport { fetchConfigurationData } from '../configuration/actions';\nimport gql from 'graphql-tag';\nimport { FitbitGalleryListResponseRoot } from '../../types/fitbitGalleryTypes';\nimport { ConfigurationActionTypes } from '../configuration/types';\nimport { AppDetails } from '../../actions/getAppDetails';\nimport { SearchApps } from '../../actions/searchApps';\n\nexport enum CategoryType {\n    allWatchFaces = 'c3c6d097-a255-4613-b817-d5d693f13318',\n    allApps = 'a406cc65-ebae-4e47-b1bd-7f86800bb2c6',\n}\n\nexport function fetchNextPageAppList(): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        dispatch({\n            type: FETCH_APPHEADLIST_NEXT_PAGE,\n            payload: {\n                isNextRequestOngoing: true,\n                doesMoreItemsExist: getState().appList.appsList\n                    .doesMoreItemsExist,\n                nextPageId: getState().appList.appsList.nextPageId,\n                apps: [],\n            },\n        });\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await fetchAppsList(\n            CategoryType.allApps,\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            getState().appList.appsList.nextPageId,\n        );\n        const appsList = asyncResp.data.collection.pagedApps.apps.map((a) => {\n            const app: AppHead = {\n                name: a.name,\n                type: a.type,\n                developerName: a.developer.name,\n                previewImage: a.previewImage.uri,\n                icon: a.icon.uri,\n                id: a.id,\n                isPaid: a.isPaid,\n                deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n            };\n            return app;\n        });\n\n        dispatch({\n            type: FETCH_APPHEADLIST_NEXT_PAGE,\n            payload: {\n                apps: appsList,\n                nextPageId: asyncResp.data.collection.pagedApps.nextPages[0],\n                doesMoreItemsExist: true,\n                isNextRequestOngoing: false,\n            },\n        });\n    };\n}\n\nexport function fetchAppHead(\n    appId: string,\n    type: 'APP' | 'WATCHFACE',\n): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        if (type === 'APP') {\n            dispatch({\n                type: FETCH_APPHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: true,\n                    doesMoreItemsExist: getState().appList.appsList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.appsList.nextPageId,\n                    apps: [],\n                },\n            });\n        } else {\n            dispatch({\n                type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: true,\n                    doesMoreItemsExist: getState().appList.watchFacesList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.watchFacesList.nextPageId,\n                    watchFaces: [],\n                },\n            });\n        }\n\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await AppDetails.fetchAppDetails(\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            appId,\n        );\n\n        const app: AppHead = {\n            name: asyncResp.data.app.name,\n            type: asyncResp.data.app.type,\n            developerName: asyncResp.data.app.developer.name,\n            previewImage: asyncResp.data.app.previewImage.uri,\n            icon: asyncResp.data.app.icon.uri,\n            id: asyncResp.data.app.id,\n            isPaid: asyncResp.data.app.isPaid,\n            deviceTypes: asyncResp.data.app.availability.deviceTypes.map(\n                (v) => v.type,\n            ),\n        };\n\n        if (type === 'APP') {\n            dispatch({\n                type: FETCH_APPHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: false,\n                    doesMoreItemsExist: getState().appList.appsList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.appsList.nextPageId,\n                    apps: [],\n                },\n            });\n        } else {\n            dispatch({\n                type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n                payload: {\n                    isNextRequestOngoing: false,\n                    doesMoreItemsExist: getState().appList.watchFacesList\n                        .doesMoreItemsExist,\n                    nextPageId: getState().appList.watchFacesList.nextPageId,\n                    watchFaces: [],\n                },\n            });\n        }\n\n        if (app.type === 'APP') {\n            dispatch({\n                type: FETCH_APPHEADLIST_NEXT_PAGE,\n                payload: {\n                    apps: [app],\n                    nextPageId: getState().appList.appsList.nextPageId,\n                    doesMoreItemsExist: true,\n                    isNextRequestOngoing: false,\n                },\n            });\n        } else {\n            dispatch({\n                type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n                payload: {\n                    watchFaces: [app],\n                    nextPageId: getState().appList.watchFacesList.nextPageId,\n                    doesMoreItemsExist: true,\n                    isNextRequestOngoing: false,\n                },\n            });\n        }\n    };\n}\n\nexport function fetchNextPageWatchFaceList(): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        dispatch({\n            type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n            payload: {\n                isNextRequestOngoing: true,\n                doesMoreItemsExist: getState().appList.watchFacesList\n                    .doesMoreItemsExist,\n                nextPageId: getState().appList.watchFacesList.nextPageId,\n                watchFaces: [],\n            },\n        });\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await fetchAppsList(\n            CategoryType.allWatchFaces,\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            getState().appList.watchFacesList.nextPageId,\n        );\n        const watchFaceList = asyncResp.data.collection.pagedApps.apps.map(\n            (a) => {\n                const app: AppHead = {\n                    name: a.name,\n                    type: a.type,\n                    developerName: a.developer.name,\n                    previewImage: a.previewImage.uri,\n                    icon: a.icon.uri,\n                    id: a.id,\n                    isPaid: a.isPaid,\n                    deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n                };\n                return app;\n            },\n        );\n\n        dispatch({\n            type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n            payload: {\n                watchFaces: watchFaceList,\n                nextPageId: asyncResp.data.collection.pagedApps.nextPages[0],\n                doesMoreItemsExist: true,\n                isNextRequestOngoing: false,\n            },\n        });\n    };\n}\n\nasync function fetchAppsList(\n    categoryType: CategoryType,\n    accessToken: string,\n    apiUrl: string,\n    nextPageKey?: string,\n) {\n    const bdy = {\n        operationName: 'category',\n        variables: {\n            id: categoryType,\n            pageKey: nextPageKey,\n        },\n        query: getAppListGql,\n    };\n    const result = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            Authorization: `Bearer ${accessToken}`,\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(bdy),\n    });\n    const resultObj = (await result.json()) as FitbitGalleryListResponseRoot;\n    return resultObj;\n}\n\nconst getAppListGql = gql`\n  query category($id: ID!, $pageKey: ID) {\n    collection: category(id: $id) {\n      id\n      name\n      pagedApps(pageOptions: {\n        pageKey: $pageKey,\n        limit: ${20},\n        numNextPages: ${5000},\n        numPrevPages: ${5}\n      }) {\n        ...pagedApps\n      }\n      appType\n    }\n  }\n\n  fragment pagedApps on PagedApps {\n    apps {\n      ...appSummary\n    }\n    nextPages\n    prevPages\n    offset\n  }\n\n  fragment appSummary on App {\n    id\n    availability {\n        deviceTypes {\n            type\n            productName\n        }\n    }\n    previewImage(scale: 1.0) {\n      uri\n    }\n    icon(width: 120, height: 120) {\n      uri\n    }\n    developer {\n      name\n    }\n    name\n    type\n    isPaid\n  }\n`;\n\nexport function searchAppHeaders(\n    searchText: string,\n): ThunkAction<\n    void,\n    AppState,\n    null,\n    AppListActionTypes | ConfigurationActionTypes\n> {\n    return async (dispatch, getState) => {\n        dispatch({\n            type: SEARCH_APPS_AND_WATCHFACES,\n            payload: {\n                isNextRequestOngoing: true,\n                watchFaces: [],\n            },\n        });\n\n        if (!getState().config.galleryApiUrl) {\n            dispatch(await fetchConfigurationData());\n        }\n\n        const asyncResp = await SearchApps.searchApps(\n            getState().config.authToken.accessToken,\n            getState().config.galleryApiUrl,\n            searchText,\n        );\n\n        const apps = asyncResp.data.appResults.apps.map((a) => {\n            const app: AppHead = {\n                name: a.name,\n                type: a.type,\n                developerName: a.name,\n                previewImage: a.previewImage.uri,\n                icon: a.icon.uri,\n                id: a.id,\n                isPaid: a.isPaid,\n                deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n            };\n            return app;\n        });\n\n        const watchfaces = asyncResp.data.clockResults.apps.map((a) => {\n            const app: AppHead = {\n                name: a.name,\n                type: a.type,\n                developerName: a.name,\n                previewImage: a.previewImage.uri,\n                icon: a.icon.uri,\n                id: a.id,\n                isPaid: a.isPaid,\n                deviceTypes: a.availability.deviceTypes.map((v) => v.type),\n            };\n            return app;\n        });\n\n        dispatch({\n            type: SEARCH_APPS_AND_WATCHFACES,\n            payload: {\n                isNextRequestOngoing: false,\n                watchFaces: [...apps, ...watchfaces],\n            },\n        });\n\n        dispatch({\n            type: FETCH_APPHEADLIST_NEXT_PAGE,\n            payload: {\n                apps,\n                nextPageId: getState().appList.appsList.nextPageId,\n                doesMoreItemsExist: getState().appList.appsList\n                    .doesMoreItemsExist,\n                isNextRequestOngoing: getState().appList.appsList\n                    .isNextRequestOngoing,\n            },\n        });\n\n        dispatch({\n            type: FETCH_WATCHFACEHEADLIST_NEXT_PAGE,\n            payload: {\n                watchFaces: watchfaces,\n                nextPageId: getState().appList.watchFacesList.nextPageId,\n                doesMoreItemsExist: getState().appList.watchFacesList\n                    .doesMoreItemsExist,\n                isNextRequestOngoing: getState().appList.watchFacesList\n                    .isNextRequestOngoing,\n            },\n        });\n    };\n}\n","import { FitbitGalleryAppDetailsResponseRoot } from '../types/fitbitGalleryTypes';\nimport gql from 'graphql-tag';\n\nexport class AppDetails {\n    public static async fetchAppDetails(\n        accessToken: string,\n        apiUrl: string,\n        appId: string,\n    ): Promise<FitbitGalleryAppDetailsResponseRoot> {\n        const getAppDetails = gql`\nquery app($id: ID!) {\n    app(id: $id) {\n        ...AppDetails\n    }\n}\n\nfragment AppDetails on App {\n    id\n    name\n    availability {\n        deviceTypes {\n            type\n            productName\n        }\n    }\n    previewImage(scale: 1.0) {\n        uri\n    }\n    icon(width: 120, height: 120) {\n        uri\n    }\n    developer {\n        name\n        website\n    }\n    description\n    contactUrl\n    screenshots {\n        uri\n        width\n        height\n    }\n    type\n    categories {\n        id\n        name\n    }\n    isPaid\n}\n`;\n        const bdy = {\n            operationName: 'app',\n            variables: {\n                id: appId,\n            },\n            query: getAppDetails,\n        };\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(bdy),\n        });\n        const result = await response.json() as FitbitGalleryAppDetailsResponseRoot;\n        return result;\n    }\n}\n","import { FitbitGallerySearchListResponseRoot } from '../types/fitbitGalleryTypes';\nimport gql from 'graphql-tag';\n\nexport class SearchApps {\n    public static async searchApps(\n        accessToken: string,\n        apiUrl: string,\n        searchText: string,\n    ): Promise<FitbitGallerySearchListResponseRoot> {\n        const querySearch = gql`\n            query searchApps($text: String!) {\n                appResults: searchApps(criteria: { type: APP, text: $text }) {\n                    ...pagedApps\n                }\n                clockResults: searchApps(\n                    criteria: { type: CLOCK, text: $text }\n                ) {\n                    ...pagedApps\n                }\n            }\n\n            fragment pagedApps on PagedApps {\n                apps {\n                    ...appSummary\n                }\n                nextPages\n                prevPages\n                offset\n            }\n\n            fragment appSummary on App {\n                id\n                availability {\n                    deviceTypes {\n                        type\n                        productName\n                    }\n                }\n                previewImage(scale: 1.0) {\n                    uri\n                }\n                icon(width: 120, height: 120) {\n                    uri\n                }\n                developer {\n                    name\n                }\n                name\n                type\n                isPaid\n            }\n        `;\n        const bdy = {\n            query: querySearch,\n            operationName: 'searchApps',\n            variables: { text: searchText },\n        };\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(bdy),\n        });\n        const result = (await response.json()) as FitbitGallerySearchListResponseRoot;\n        return result;\n    }\n}\n","import { AppHead, AppHeadsList } from './types';\n\nexport enum DeviceType {\n    Ionic = 'HIGGS',\n    Versa = 'MESON',\n    Versa_Lite = 'GEMINI',\n    Versa2 = 'MIRA',\n}\n\nexport enum AppType {\n    App = 'APP',\n    WatchFace = 'CLOCK',\n}\n\nexport interface AppListFilter {\n    isPaid?: boolean;\n    appType?: AppType;\n    deviceType?: DeviceType;\n}\n\nexport function filterAppList(\n    fullList: AppHeadsList,\n    filter: AppListFilter,\n): AppHead[] {\n    const filteredApps = fullList.apps.filter((app) => {\n        return compareAgainstFilter(app, filter);\n    });\n    return filteredApps;\n}\n\nfunction compareAgainstFilter(app: AppHead, filter: AppListFilter): boolean {\n    let validAgainstFilter = true;\n    if (filter.isPaid !== undefined) {\n        validAgainstFilter = validAgainstFilter && app.isPaid === filter.isPaid;\n    }\n    if (filter.appType !== undefined) {\n        validAgainstFilter = validAgainstFilter && app.type === filter.appType;\n    }\n    if (filter.deviceType !== undefined) {\n        validAgainstFilter =\n            validAgainstFilter &&\n            app.deviceTypes.findIndex((v) => v === filter.deviceType) >= 0;\n    }\n    return validAgainstFilter;\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\ninterface DropdownItem {\n    displayName: string;\n    id: number;\n}\n\ninterface OwnProps {\n    items: DropdownItem[];\n    prefixText: string;\n    onSelectionChanged: (id: number) => void;\n}\n\ninterface OwnState {\n    selectedItem: DropdownItem;\n    isActive: boolean;\n}\n\nexport class Dropdown extends Component<OwnProps, OwnState> {\n    constructor(props: OwnProps) {\n        super(props);\n        this.state = {\n            selectedItem: props.items[0],\n            isActive: false,\n        };\n    }\n\n    onItemSelect(item: DropdownItem) {\n        this.setState((state) => {\n            return { ...state, selectedItem: item };\n        });\n        this.props.onSelectionChanged(item.id);\n    }\n\n    render() {\n        return (\n            <div\n                className={`dropdown ${this.state.isActive ? 'is-active' : ''}`}\n                onClick={() =>\n                    this.setState((state) => {\n                        return { ...state, isActive: !state.isActive };\n                    })\n                }\n            >\n                <div className=\"dropdown-trigger\">\n                    <button\n                        className=\"button\"\n                        aria-haspopup=\"true\"\n                        aria-controls=\"dropdown-menu\"\n                    >\n                        <span>\n                            {this.props.prefixText +\n                                this.state.selectedItem.displayName}\n                        </span>\n                        <span className=\"icon is-small\">\n                            <FontAwesomeIcon icon={faAngleDown} />\n                        </span>\n                    </button>\n                </div>\n                <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                    <div className=\"dropdown-content\">\n                        {this.props.items.map((item) => {\n                            return (\n                                <a\n                                    href=\"#/SelectItem\"\n                                    className={`dropdown-item ${\n                                        item.id === this.state.selectedItem.id\n                                            ? 'is-active'\n                                            : ''\n                                    }`}\n                                    onClick={() => this.onItemSelect(item)}\n                                >\n                                    {item.displayName}\n                                </a>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard } from '@fortawesome/free-solid-svg-icons';\n\ninterface OwnProps {\n    item: {\n        name: string;\n        type: string;\n        developerName: string;\n        previewImage: string;\n        icon: string;\n        id: string;\n        isPaid: boolean;\n    };\n    onClick: () => void;\n}\n\nexport default class AppItem extends Component<OwnProps> {\n    render() {\n        return (\n            <div\n                className=\"card is-shady is-fullheight\"\n                onClick={this.props.onClick}\n            >\n                <div className=\"card-image\">\n                    <figure className=\"image\">\n                        <img\n                            src={this.props.item.previewImage}\n                            alt=\"Preview\"\n                        />\n                    </figure>\n                </div>\n                <div className=\"card-content\">\n                    <div className=\"content\">\n                            <h4>{this.props.item.name}</h4>\n                            {this.props.item.isPaid && <FontAwesomeIcon\n                                icon={faCreditCard}\n                                size=\"2x\"\n                            />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import {\n    SavedAppActionTypes,\n    SavedApp,\n    SAVE_APP,\n    REMOVE_SAVED_APP,\n    LOAD_SAVED_APPS,\n    SavedAppsState,\n    SAVE_SAVED_APPS,\n} from './types';\n\nconst localStorageKeySerializedSavedApps: string = 'serializedSavedApps';\n\n// TODO convert this action to thunk and call save inside\nexport function saveApp(appToSave: SavedApp): SavedAppActionTypes {\n    return {\n        type: SAVE_APP,\n        payload: { savedApp: appToSave },\n    };\n}\n\n// TODO convert this action to thunk and call save inside\nexport function removeSavedApp(appToRemove: SavedApp): SavedAppActionTypes {\n    return {\n        type: REMOVE_SAVED_APP,\n        payload: { savedApp: appToRemove },\n    };\n}\n\nexport function loadSavedApps(): SavedAppActionTypes {\n    const serializedData = localStorage.getItem(\n        localStorageKeySerializedSavedApps,\n    );\n\n    if (!serializedData) {\n        return {\n            type: LOAD_SAVED_APPS,\n            payload: {\n                savedApps: [],\n            },\n        };\n    }\n\n    const data = JSON.parse(serializedData) as SavedApp[];\n    return {\n        type: LOAD_SAVED_APPS,\n        payload: {\n            savedApps: data,\n        },\n    };\n}\n\nexport function saveSavedApps(\n    savedAppsState: SavedAppsState,\n): SavedAppActionTypes {\n    localStorage.setItem(\n        localStorageKeySerializedSavedApps,\n        JSON.stringify(savedAppsState.savedApps),\n    );\n    return {\n        type: SAVE_SAVED_APPS,\n    };\n}\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport { FitbitGalleryAppDetailsResponseApp } from '../../types/fitbitGalleryTypes';\nimport { ConfigurationState } from '../../store/configuration/types';\nimport store, { AppState } from '../../store';\nimport { connect } from 'react-redux';\nimport { AppDetails } from '../../actions/getAppDetails';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faCreditCard } from '@fortawesome/free-solid-svg-icons';\nimport {\n    saveApp,\n    removeSavedApp,\n    saveSavedApps,\n    loadSavedApps,\n} from '../../store/savedApps/actions';\nimport { SavedAppsState } from '../../store/savedApps/types';\n\ninterface OwnProps {\n    // isActive: boolean;\n    appId?: string;\n    onClose: () => void;\n}\n\ninterface AppDetailsData extends FitbitGalleryAppDetailsResponseApp {\n    isSaved: boolean;\n}\n\ninterface StateProps {\n    configs: ConfigurationState;\n    savedApps: SavedAppsState;\n}\n\ninterface OwnState {\n    appsDetails: AppDetailsData[];\n    currentDetails?: AppDetailsData;\n}\n\ntype Props = StateProps & OwnProps;\n\nclass AppItemModal extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            appsDetails: [],\n        };\n    }\n\n    componentWillMount() {\n        store.dispatch(loadSavedApps());\n    }\n\n    async componentDidUpdate(prevProps: Readonly<Props>) {\n        if (this.props.appId && this.props.savedApps !== prevProps.savedApps) {\n            // Saved apps have updated, check for current again.\n            const isSaved =\n                this.props.savedApps.savedApps.findIndex((app) => {\n                    return app.id === this.props.appId;\n                }) >= 0;\n\n            this.setState((state) => {\n                let currentDetails: AppDetailsData | undefined = undefined;\n                if (state.currentDetails) {\n                    currentDetails = {\n                        ...state.currentDetails,\n                        isSaved,\n                    };\n                }\n                return {\n                    ...state,\n                    currentDetails,\n                };\n            });\n        }\n\n        if (this.props.appId && !prevProps.appId) {\n            document.getElementsByTagName('html')[0].style.overflow = 'hidden';\n            document.getElementsByTagName('body')[0].style.overflowY = 'scroll';\n            const currentAppDetails = await this.retrieveAppDetails(\n                this.props.appId!,\n            );\n\n            const isSaved =\n                this.props.savedApps.savedApps.findIndex((app) => {\n                    return app.id === this.props.appId;\n                }) >= 0;\n\n            this.setState((state) => {\n                return {\n                    ...state,\n                    currentDetails: { ...currentAppDetails, isSaved },\n                };\n            });\n        }\n\n        if (!this.props.appId && prevProps.appId) {\n            document.getElementsByTagName('html')[0].style.overflow = '';\n            document.getElementsByTagName('body')[0].style.overflowY = '';\n            this.setState((state) => {\n                return {\n                    ...state,\n                    currentDetails: undefined,\n                };\n            });\n        }\n    }\n\n    saveCurrentApp() {\n        if (!this.props.appId) {\n            return;\n        }\n\n        // TODO convert this action to thunk and call save inside\n        store.dispatch(saveApp({ id: this.props.appId }));\n        store.dispatch(saveSavedApps(store.getState().savedApps));\n    }\n\n    removeCurrentAppFromSaved() {\n        if (!this.props.appId) {\n            return;\n        }\n\n        // TODO convert this action to thunk and call save inside\n        store.dispatch(removeSavedApp({ id: this.props.appId }));\n        store.dispatch(saveSavedApps(store.getState().savedApps));\n    }\n\n    render() {\n        if (!this.state.currentDetails) {\n            return <div />;\n        }\n\n        return (\n            <div\n                id=\"modal-card\"\n                className={`modal ${this.props.appId ? ' is-active' : ''}`}\n            >\n                <div\n                    onClick={this.props.onClose}\n                    className=\"modal-background\"\n                />\n                <div className=\"modal-content is-tiny\">\n                    <div className=\"card\">\n                        <div className=\"card-image\">\n                            <div className=\"columns is-centered is-mobile\">\n                                <div className=\"column is-5\">\n                                    <AliceCarousel\n                                        autoPlay\n                                        autoPlayInterval={3000}\n                                        buttonsDisabled\n                                        autoHeight\n                                    >\n                                        {this.state.currentDetails.screenshots.map(\n                                            (screenshot) => {\n                                                return (\n                                                    <div className=\"image\">\n                                                        <img\n                                                            src={screenshot.uri}\n                                                            alt=\"Placeholder\"\n                                                        />\n                                                    </div>\n                                                );\n                                            },\n                                        )}\n                                    </AliceCarousel>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-content\">\n                            <div\n                                onClick={\n                                    this.state.currentDetails.isSaved\n                                        ? this.removeCurrentAppFromSaved.bind(\n                                              this,\n                                          )\n                                        : this.saveCurrentApp.bind(this)\n                                }\n                            >\n                                <FontAwesomeIcon\n                                    icon={\n                                        this.state.currentDetails.isSaved\n                                            ? fasHeart\n                                            : farHeart\n                                    }\n                                    size=\"3x\"\n                                />\n                            </div>\n                            <div className=\"media\">\n                                <div className=\"media-left\">\n                                    <div className=\"image is-48x48\">\n                                        <img\n                                            src={\n                                                this.state.currentDetails\n                                                    .previewImage.uri\n                                            }\n                                            alt=\"linda barret avatar\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"media-content\">\n                                    <p className=\"title is-4\">\n                                        {this.state.currentDetails.name}\n                                    </p>\n                                    <p className=\"subtitle is-6\">\n                                        {\n                                            this.state.currentDetails.developer\n                                                .name\n                                        }\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"content\">\n                                <div>\n                                    Devices:\n                                    {this.state.currentDetails.availability.deviceTypes.map(\n                                        (device) => (\n                                            <div>{device.productName}</div>\n                                        ),\n                                    )}\n                                </div>\n                                <a\n                                    className=\"button is-info\"\n                                    href={`https://gallery.fitbit.com/details/${\n                                        this.state.currentDetails.id\n                                    }`}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    To Fitbit\n                                </a>\n                                <a\n                                    className=\"button is-primary\"\n                                    href={`https://gallery.fitbit.com/details/${\n                                        this.state.currentDetails.id\n                                    }/OpenApp`}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    Open App\n                                </a>\n                                {this.state.currentDetails.isPaid && (\n                                    <div>\n                                        <FontAwesomeIcon\n                                            icon={faCreditCard}\n                                            size=\"2x\"\n                                        />\n                                        <div\n                                            style={{ display: 'inline-block' }}\n                                            className=\"has-text-weight-bold\"\n                                        >\n                                            This application requires a payment\n                                        </div>\n                                    </div>\n                                )}\n                                {this.state.currentDetails.description\n                                    .split('\\n')\n                                    .map((item, i) => {\n                                        return <p key={i}>{item}</p>;\n                                    })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    className=\"modal-close is-large\"\n                    aria-label=\"close\"\n                    onClick={this.props.onClose}\n                />\n            </div>\n        );\n    }\n\n    async retrieveAppDetails(appId: string) {\n        const found = this.state.appsDetails.find((details) => {\n            return details.id === appId;\n        });\n        if (found) {\n            return found;\n        }\n        const response = await AppDetails.fetchAppDetails(\n            this.props.configs.authToken.accessToken,\n            this.props.configs.galleryApiUrl,\n            this.props.appId!,\n        );\n        this.setState((state) => {\n            return {\n                ...state,\n                appsDetails: [\n                    ...state.appsDetails,\n                    { ...response.data.app, isSaved: false },\n                ],\n            };\n        });\n        return response.data.app;\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    return {\n        configs: state.config,\n        savedApps: state.savedApps,\n    };\n}\n\nexport default connect<StateProps, {}, OwnProps, AppState>(mapStateToProps)(\n    // It's somehow treating props as never type. Cast to any for now.\n    AppItemModal as any,\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../store';\nimport { fetchNextPageWatchFaceList } from '../store/appList/actions';\nimport { AppListFilter, DeviceType } from '../store/appList/filter';\nimport { Dropdown } from './DropdownFilter/DropdownFilter';\nimport { AppHeadsList } from '../store/appList/types';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AppListView from './AppListView';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    { displayName: 'Versa', id: DeviceFilterEnum.Versa, value: DeviceType.Versa },\n    { displayName: 'Versa Lite', id: DeviceFilterEnum.Versa_Lite, value: DeviceType.Versa_Lite },\n    { displayName: 'Versa 2', id: DeviceFilterEnum.Versa2, value: DeviceType.Versa2 },\n    { displayName: 'Ionic', id: DeviceFilterEnum.Ionic, value: DeviceType.Ionic },\n];\n\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n}\n\ninterface StateProps {\n    watchFaceList: AppHeadsList;\n}\n\ninterface DispatchProps {\n    fetchWatchFaceListNextPage: () => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass WatchFaceList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        fetchMoreApps={async () => {\n                            await this.props.fetchWatchFaceListNextPage();\n                        }}\n                        allApps={this.props.watchFaceList}\n                        filter={this.state.currentFilter}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        watchFaceList: state.appList.watchFacesList,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        fetchWatchFaceListNextPage: async () => {\n            await dispatch(fetchNextPageWatchFaceList());\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(WatchFaceList);\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport AppItem from './AppItem';\nimport AppItemModal from './AppModal/AppItemModal';\nimport { filterAppList, AppListFilter } from '../store/appList/filter';\nimport { AppHead, AppHeadsList } from '../store/appList/types';\n\ninterface OwnProps {\n    allApps: AppHeadsList;\n    filter: AppListFilter;\n    fetchMoreApps?: () => Promise<void>;\n}\n\ninterface OwnState {\n    modalAppIdShow?: string;\n    filteredAppList: AppHead[];\n}\n\ntype Props = OwnProps;\n\nexport default class AppListView extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            filteredAppList: filterAppList(\n                this.props.allApps,\n                this.props.filter,\n            ),\n        };\n        this.onScroll = this.onScroll.bind(this);\n    }\n\n    async onScroll(event: Event) {\n        if (!event.target) {\n            return;\n        }\n\n        const element = (event.target as any).scrollingElement || event.target;\n        if (\n            (element as any).scrollHeight - (element as any).scrollTop <=\n            (element as any).clientHeight * 2\n        ) {\n            if (\n                this.props.fetchMoreApps &&\n                !this.props.allApps.isNextRequestOngoing\n            ) {\n                await this.props.fetchMoreApps();\n            }\n        }\n    }\n\n    componentWillMount() {\n        if (\n            this.props.allApps.apps.length < 1 &&\n            this.props.fetchMoreApps &&\n            !this.props.allApps.isNextRequestOngoing\n        ) {\n            this.props.fetchMoreApps();\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.onScroll, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll, false);\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<Props>,\n        prevState: Readonly<OwnState>,\n    ) {\n        if (\n            prevProps.allApps !== this.props.allApps ||\n            prevProps.filter !== this.props.filter\n        ) {\n            this.setState((state) => {\n                return {\n                    ...state,\n                    filteredAppList: filterAppList(\n                        this.props.allApps,\n                        this.props.filter,\n                    ),\n                };\n            });\n        }\n    }\n\n    onCloseModal() {}\n\n    private loadingRowsPromises: Promise<void>[] = [];\n\n    async loadMoreItems(): Promise<void> {\n        if (!this.props.fetchMoreApps) {\n            return;\n        }\n        if (this.props.allApps.isNextRequestOngoing) {\n        }\n        await Promise.all(this.loadingRowsPromises);\n        const fetching = this.props.fetchMoreApps();\n        this.loadingRowsPromises.push(fetching);\n        await fetching;\n        for (let i = 0; i < this.loadingRowsPromises.length; i++) {\n            if (this.loadingRowsPromises[i] === fetching) {\n                this.loadingRowsPromises.splice(i, 1);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"columns is-multiline is-mobile\">\n                    {this.state.filteredAppList.map((app) => (\n                        <div\n                            className=\"column is-half-mobile is-2-desktop\"\n                            key={app.id}\n                        >\n                            <AppItem\n                                item={app}\n                                onClick={() => {\n                                    this.setState((state) => {\n                                        return {\n                                            ...state,\n                                            modalAppIdShow: app.id,\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>\n                    ))}\n                </div>\n                {this.props.fetchMoreApps ? (\n                    <div\n                        className={`button is-primary ${\n                            this.props.allApps.isNextRequestOngoing\n                                ? 'is-loading'\n                                : ''\n                        }`}\n                        onClick={\n                            this.props.allApps.isNextRequestOngoing\n                                ? () => {}\n                                : this.loadMoreItems.bind(this)\n                        }\n                    >\n                        Load more\n                    </div>\n                ) : (\n                    ''\n                )}\n\n                <AppItemModal\n                    appId={this.state.modalAppIdShow}\n                    onClose={() => {\n                        this.setState((state) => {\n                            return {\n                                ...state,\n                                modalAppIdShow: undefined,\n                            };\n                        });\n                    }}\n                    // isActive={this.state.isModalActive}\n                />\n            </div>\n        );\n    }\n}\n\n// function mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n//     console.log('mapping...');\n//     return {\n//         fetchNextPageAppList,\n//         appListState: state.appList,\n//     };\n// }\n\n// function mapDispatchToProps(\n//     dispatch: ThunkDispatch<{}, {}, any>,\n//     ownProps: OwnProps,\n// ): DispatchProps {\n//     return {\n//         thunkFetchAppList: async () => {\n//             await dispatch(fetchNextPageAppList());\n//             console.log('Fetch completed [UI]');\n//         },\n//     };\n// }\n\n// export default connect<StateProps, DispatchProps, OwnProps, AppState>(\n//     mapStateToProps,\n//     mapDispatchToProps,\n// )(AppList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../store';\nimport { fetchNextPageAppList } from '../store/appList/actions';\nimport { AppListFilter, DeviceType } from '../store/appList/filter';\nimport { Dropdown } from './DropdownFilter/DropdownFilter';\nimport { AppHeadsList } from '../store/appList/types';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AppListView from './AppListView';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    { displayName: 'Versa', id: DeviceFilterEnum.Versa, value: DeviceType.Versa },\n    { displayName: 'Versa Lite', id: DeviceFilterEnum.Versa_Lite, value: DeviceType.Versa_Lite },\n    { displayName: 'Versa 2', id: DeviceFilterEnum.Versa2, value: DeviceType.Versa2 },\n    { displayName: 'Ionic', id: DeviceFilterEnum.Ionic, value: DeviceType.Ionic },\n];\n\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n}\n\ninterface StateProps {\n    watchFacesList: AppHeadsList;\n}\n\ninterface DispatchProps {\n    fetchWatchFacesListNextPage: () => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass AppsList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        fetchMoreApps={async () => {\n                            await this.props.fetchWatchFacesListNextPage();\n                        }}\n                        allApps={this.props.watchFacesList}\n                        filter={this.state.currentFilter}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        watchFacesList: state.appList.appsList,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        fetchWatchFacesListNextPage: async () => {\n            await dispatch(fetchNextPageAppList());\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AppsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppListFilter, AppType, DeviceType } from '../../store/appList/filter';\nimport { AppHeadsList, AppHead } from '../../store/appList/types';\nimport { Dropdown } from '../DropdownFilter/DropdownFilter';\nimport AppListView from '../AppListView';\nimport { AppState } from '../../store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { SavedApp } from '../../store/savedApps/types';\nimport { fetchAppHead } from '../../store/appList/actions';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    { displayName: 'Versa', id: DeviceFilterEnum.Versa, value: DeviceType.Versa },\n    { displayName: 'Versa Lite', id: DeviceFilterEnum.Versa_Lite, value: DeviceType.Versa_Lite },\n    { displayName: 'Versa 2', id: DeviceFilterEnum.Versa2, value: DeviceType.Versa2 },\n    { displayName: 'Ionic', id: DeviceFilterEnum.Ionic, value: DeviceType.Ionic },\n];\n\nenum TypeFilterEnum {\n    All,\n    WatchFaces,\n    Apps,\n}\n\nconst typeFilterDisplay: {\n    displayName: string;\n    id: TypeFilterEnum;\n    value: AppType | undefined;\n}[] = [\n    { displayName: 'All', id: TypeFilterEnum.All, value: undefined },\n    {\n        displayName: 'WatchFaces',\n        id: TypeFilterEnum.WatchFaces,\n        value: AppType.WatchFace,\n    },\n    { displayName: 'Apps', id: TypeFilterEnum.Apps, value: AppType.App },\n];\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n    filteredSavedApps: AppHeadsList;\n}\n\ninterface StateProps {\n    savedWatchFacesList: AppHeadsList;\n    savedAppsList: AppHeadsList;\n    savedApps: SavedApp[];\n}\n\ninterface DispatchProps {\n    fetchAppHead: (id: string, appType: AppType) => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass SavedAppsList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n            filteredSavedApps: {\n                apps: [],\n                doesMoreItemsExist: true,\n                isNextRequestOngoing: false,\n                nextPageId: '',\n            },\n        };\n    }\n\n    private currentlyDownloadingItems: string[] = [];\n\n    async downloadMissingItem(itemId: string) {\n        if (this.currentlyDownloadingItems.findIndex((x) => x === itemId) < 0) {\n            this.currentlyDownloadingItems.push(itemId);\n            await this.props.fetchAppHead(itemId, AppType.App);\n            await this.props.fetchAppHead(itemId, AppType.WatchFace);\n        }\n\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<Props>,\n        prevState: Readonly<OwnState>,\n    ) {\n        if (\n            prevProps.savedApps !== this.props.savedApps ||\n            prevProps.savedAppsList !== this.props.savedAppsList ||\n            prevProps.savedWatchFacesList !== this.props.savedWatchFacesList\n        ) {\n            this.setState((state) => {\n                const foundList: AppHead[] = [];\n                const notFoundList: string[] = [];\n                this.props.savedApps.forEach((element) => {\n                    let found = this.props.savedAppsList.apps.find(\n                        (a) => a.id === element.id,\n                    );\n                    if (!found) {\n                        found = this.props.savedWatchFacesList.apps.find(\n                            (a) => a.id === element.id,\n                        );\n                    }\n                    if (found) {\n                        foundList.push(found);\n                    } else {\n                        notFoundList.push(element.id);\n                    }\n                });\n                for (let i = 0; i < notFoundList.length; i++) {\n                    const element = notFoundList[i];\n                    this.downloadMissingItem(element);\n                }\n                return {\n                    ...state,\n                    filteredSavedApps: {\n                        apps: [...foundList],\n                        doesMoreItemsExist: false,\n                        isNextRequestOngoing:\n                            this.props.savedAppsList.isNextRequestOngoing ||\n                            this.props.savedWatchFacesList.isNextRequestOngoing,\n                        nextPageId: '!',\n                    },\n                };\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Type: \"\n                        items={typeFilterDisplay}\n                        onSelectionChanged={(id: TypeFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        appType: typeFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        allApps={this.state.filteredSavedApps}\n                        filter={this.state.currentFilter}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        savedWatchFacesList: state.appList.watchFacesList,\n        savedAppsList: state.appList.appsList,\n        savedApps: state.savedApps.savedApps,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        fetchAppHead: async (id: string, appType: AppType) => {\n            switch (appType) {\n                case AppType.App:\n                    await dispatch(fetchAppHead(id, 'APP'));\n                    break;\n                case AppType.WatchFace:\n                    await dispatch(fetchAppHead(id, 'WATCHFACE'));\n                    break;\n                default:\n                    break;\n            }\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SavedAppsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppListFilter, AppType, DeviceType } from '../../store/appList/filter';\nimport { AppHeadsList } from '../../store/appList/types';\nimport { Dropdown } from '../DropdownFilter/DropdownFilter';\nimport AppListView from '../AppListView';\nimport { AppState } from '../../store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { searchAppHeaders } from '../../store/appList/actions';\n\nenum PriceFilterEnum {\n    PaidFree,\n    Free,\n    Paid,\n}\n\nconst priceFilterDisplay: {\n    displayName: string;\n    id: PriceFilterEnum;\n    value: boolean | undefined;\n}[] = [\n    {\n        displayName: 'Paid & Free',\n        id: PriceFilterEnum.PaidFree,\n        value: undefined,\n    },\n    { displayName: 'Free', id: PriceFilterEnum.Free, value: false },\n    { displayName: 'Paid', id: PriceFilterEnum.Paid, value: true },\n];\n\nenum DeviceFilterEnum {\n    All,\n    Ionic,\n    Versa,\n    Versa_Lite,\n    Versa2,\n}\n\nconst deviceFilterDisplay: {\n    displayName: string;\n    id: DeviceFilterEnum;\n    value: DeviceType | undefined;\n}[] = [\n    { displayName: 'All', id: DeviceFilterEnum.All, value: undefined },\n    {\n        displayName: 'Versa',\n        id: DeviceFilterEnum.Versa,\n        value: DeviceType.Versa,\n    },\n    {\n        displayName: 'Versa Lite',\n        id: DeviceFilterEnum.Versa_Lite,\n        value: DeviceType.Versa_Lite,\n    },\n    {\n        displayName: 'Versa 2',\n        id: DeviceFilterEnum.Versa2,\n        value: DeviceType.Versa2,\n    },\n    {\n        displayName: 'Ionic',\n        id: DeviceFilterEnum.Ionic,\n        value: DeviceType.Ionic,\n    },\n];\n\nenum TypeFilterEnum {\n    All,\n    WatchFaces,\n    Apps,\n}\n\nconst typeFilterDisplay: {\n    displayName: string;\n    id: TypeFilterEnum;\n    value: AppType | undefined;\n}[] = [\n    { displayName: 'All', id: TypeFilterEnum.All, value: undefined },\n    {\n        displayName: 'WatchFaces',\n        id: TypeFilterEnum.WatchFaces,\n        value: AppType.WatchFace,\n    },\n    { displayName: 'Apps', id: TypeFilterEnum.Apps, value: AppType.App },\n];\n\ninterface OwnState {\n    currentFilter: AppListFilter;\n    searchInputValue: string;\n}\n\ninterface StateProps {\n    searchAppsList: AppHeadsList;\n}\n\ninterface DispatchProps {\n    searchForApps: (searchText: string) => Promise<void>;\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nclass SavedAppsList extends Component<Props, OwnState> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentFilter: {},\n            searchInputValue: '',\n        };\n    }\n\n    executeSearch() {\n        console.log('tettete');\n\n        this.props.searchForApps(this.state.searchInputValue);\n    }\n\n    updateInputValue(evt: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            ...this.state,\n            searchInputValue: (evt.target as any).value,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <input\n                    value={this.state.searchInputValue}\n                    onChange={(evt) => this.updateInputValue(evt)}\n                    onKeyUp={(e) => {\n                        if (\n                            e.keyCode === 13 &&\n                            !this.props.searchAppsList.isNextRequestOngoing\n                        ) {\n                            this.executeSearch();\n                        }\n                    }}\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Search for apps\"\n                />\n                <button\n                    className={`button is-primary ${\n                        this.props.searchAppsList.isNextRequestOngoing\n                            ? 'is-loading'\n                            : ''\n                    }`}\n                    onClick={\n                        this.props.searchAppsList.isNextRequestOngoing\n                            ? () => {}\n                            : this.executeSearch.bind(this)\n                    }\n                >\n                    Search\n                </button>\n                <div>\n                    <Dropdown\n                        prefixText=\"Price: \"\n                        items={priceFilterDisplay}\n                        onSelectionChanged={(id: PriceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        isPaid: priceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Device: \"\n                        items={deviceFilterDisplay}\n                        onSelectionChanged={(id: DeviceFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        deviceType: deviceFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <Dropdown\n                        prefixText=\"Type: \"\n                        items={typeFilterDisplay}\n                        onSelectionChanged={(id: TypeFilterEnum) => {\n                            this.setState((state) => {\n                                return {\n                                    ...state,\n                                    currentFilter: {\n                                        ...state.currentFilter,\n                                        appType: typeFilterDisplay.find(\n                                            (filter) => filter.id === id,\n                                        )!.value,\n                                    },\n                                };\n                            });\n                        }}\n                    />\n                    <AppListView\n                        allApps={this.props.searchAppsList}\n                        filter={this.state.currentFilter}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: OwnProps): StateProps {\n    console.log('mapping...');\n    return {\n        searchAppsList: state.appList.lastSearchResult,\n    };\n}\n\nfunction mapDispatchToProps(\n    dispatch: ThunkDispatch<{}, {}, any>,\n    ownProps: OwnProps,\n): DispatchProps {\n    return {\n        searchForApps: async (searchText: string) => {\n            await dispatch(searchAppHeaders(searchText));\n        },\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SavedAppsList);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nexport default class SavedAppsList extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <section className=\"articles\">\n                    <div className=\"column is-8 is-offset-2\">\n                        <div className=\"card article\">\n                            <div className=\"card-content\">\n                                <div className=\"media\">\n                                    <div className=\"media-content has-text-centered\">\n                                        <p className=\"title article-title\">About</p>\n                                    </div>\n                                </div>\n                                <div className=\"content article-body\">\n                                    <p>This website is NOT affiliated with Fitbit</p>\n                                    <p>This website was made as a fun side project. I'm not making any money of this.</p>\n\n                                    <p>\n                                        This website is not intended to replace any of Fitbit apps or websites.\n                                    </p>\n                                    <h3 className=\"has-text-centered\">Transparency</h3>\n                                    <p>All your saved apps are saved only in your browser.</p>\n                                    <p>For anyone concerned, you can look at the source files here</p>\n                                    <a\n                                        href=\"https://github.com/Woyken/fitbitGalleryW\"\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                        className=\"button is-primary is-medium\"\n                                    >\n                                        <span className=\"icon\">\n                                            <FontAwesomeIcon icon={faGithub}></FontAwesomeIcon>\n                                        </span>\n                                        <span>Github</span>\n                                    </a>\n                                    <p></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n","// tslint:disable-next-line: import-name\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.sass';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport WatchFaceList from './components/WatchFaceList';\nimport AppsList from './components/AppsList';\nimport SavedAppsList from './components/SavedAppsList/SavedAppsList';\nimport About from './components/About/About';\nimport SearchAppsList from './components/SearchAppsList/SearchAppsList';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Tabs selectedTabClassName=\"is-active\">\n                        <div className=\"tabs is-centered is-boxed\">\n                            <TabList>\n                                <Tab>\n                                    <a href='#/WatchFaces'>Watch Faces</a>\n                                </Tab>\n                                <Tab>\n                                    <a href='#/Apps'>Apps</a>\n                                </Tab>\n                                <Tab>\n                                    <a href='#/Search'>Search</a>\n                                </Tab>\n                                <Tab>\n                                    <a href='#/Saved'>Saved</a>\n                                </Tab>\n                                <Tab>\n                                    <a href='#/About'>About</a>\n                                </Tab>\n                            </TabList>\n                        </div>\n\n                        <TabPanel>\n                            <WatchFaceList />\n                        </TabPanel>\n                        <TabPanel>\n                            <AppsList />\n                        </TabPanel>\n                        <TabPanel>\n                            <SearchAppsList />\n                        </TabPanel>\n                        <TabPanel>\n                            <SavedAppsList />\n                        </TabPanel>\n                        <TabPanel>\n                            <About />\n                        </TabPanel>\n                    </Tabs>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// tslint:disable-next-line: import-name\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}